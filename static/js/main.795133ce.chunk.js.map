{"version":3,"sources":["components/SearchInput/SearchInput.js","components/StatusBullet/StatusBullet.js","components/RouteWithLayout/RouteWithLayout.js","theme/palette.js","theme/typography.js","components/MaterialTable/customizedTheme.js","components/MaterialTable/MaterialTable.js","components/AlertDialog/AlertDialog.js","components/FormDialog/formDialogStyles.js","utils/validateOverride.js","components/DynamicForm/dynamicFormStyles.js","components/DateField/DateField.js","components/DynamicForm/DynamicForm.js","components/FormDialog/FormDialog.js","components/LatestEventsList/EventAction.js","components/LatestEventsList/LatestEventsList.js","layouts/Main/components/Footer/Footer.js","common/routes.js","layouts/Main/components/Sidebar/components/Profile/Profile.js","layouts/Main/components/Sidebar/components/SidebarNav/SidebarNav.js","layouts/Main/components/Sidebar/Sidebar.js","layouts/Main/components/Sidebar/components/UpgradePlan/UpgradePlan.js","utils/graphqlMutations.js","layouts/Main/components/Topbar/Topbar.js","layouts/Main/Main.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","layouts/Minimal/components/Topbar/Topbar.js","layouts/Minimal/Minimal.js","views/Account/components/AccountDetails/AccountDetails.js","views/Account/components/AccountProfile/AccountProfile.js","views/Account/Account.js","utils/graphqlQueries.js","views/Dashboard/components/Users/Users.js","views/Dashboard/components/Devices/Devices.js","views/Dashboard/components/ActiveEvents/ActiveEvents.js","views/Dashboard/components/MaintenanceDevices/MaintenanceDevices.js","views/Dashboard/components/ReportEvents/ReportEvents.js","views/Dashboard/components/LiquidatedDevices/LiquidatedDevices.js","views/Dashboard/components/UsageChart/CustomizedShape.js","views/Dashboard/components/UsageChart/UsageChart.js","redux/actions/meActions.js","redux/actions/usersActions.js","redux/actions/devicesActions.js","redux/actions/activeEventsActions.js","views/Dashboard/Dashboard.js","views/NotFound/NotFound.js","views/DeviceList/components/ProductCard/ProductCard.js","views/DeviceList/components/DevicesToolbar/DevicesToolbar.js","helpers/getInitials.js","views/DeviceList/components/DevicesDialog/DevicesDialog.js","views/DeviceList/components/DeviceProfile/deviceProfileStyles.js","views/DeviceList/components/EditDevice/EditDevice.js","views/DeviceList/components/DeviceProfile/DeviceProfile.js","views/DeviceList/DeviceList.js","views/Settings/components/Password/Password.js","views/Settings/components/Notifications/Notifications.js","views/Settings/components/Account/Account.js","views/UserList/components/UserBio/UserBio.js","views/UserList/components/EditInfo/EditInfo.js","views/Settings/Settings.js","views/SignIn/signInStyles.js","common/config.js","utils/meQuery.js","views/SignIn/SignIn.js","views/SignUp/signUpStyles.js","views/SignUp/SignUp.js","views/UserList/components/UsersToolbar/UsersToolbar.js","views/Typography/Typography.js","views/UserList/components/UsersTable/UsersTable.js","views/UserList/components/UsersDialog/UsersDialog.js","views/UserList/components/UserProfile/userProfileStyles.js","views/UserList/components/UserProfile/UserProfile.js","views/UserList/UserList.js","views/ForgotPassword/forgotPasswordStyles.js","views/ForgotPassword/ForgotPassword.js","views/ConfirmNotification/ConfirmNotification.js","views/ResetPassword/resetPasswordStyles.js","views/ResetPassword/ResetPassword.js","views/Landing/landingStyles.js","views/Landing/Landing.js","views/Policy/Policy.js","components/Routes/Routes.js","App.js","redux/reducers/meReducer.js","redux/reducers/usersReducer.js","redux/reducers/devicesReducer.js","redux/reducers/activeEventsReducer.js","redux/reducers/index.js","redux/store.js","utils/graphqlClient.js","index.js"],"names":["makeStyles","theme","root","borderRadius","alignItems","padding","spacing","display","flexBasis","icon","marginRight","color","palette","text","secondary","input","flexGrow","fontSize","lineHeight","letterSpacing","useStyles","flexShrink","sm","height","width","md","lg","neutral","backgroundColor","primary","main","info","warning","danger","error","success","StatusBullet","props","className","size","rest","classes","clsx","defaultProps","RouteWithLayout","Layout","layout","Component","component","render","matchProps","white","black","purple","blue","orange","yellow","red","gradient","contrastText","dark","light","colors","indigo","green","blueGrey","link","background","default","paper","divider","grey","h1","fontWeight","h2","h3","h4","h5","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","toolbarPaddingNarrow","createMuiTheme","typography","overrides","MUIDataTableHeadCell","sortAction","flexDirection","sortActive","MuiTableSortLabel","MuiTableRow","transition","cursor","MuiTableHead","borderBottom","MuiToolbar","regular","paddingLeft","paddingRight","minHeight","MUIDataTable","responsiveStacked","overflowX","MaterialTable","columns","data","options","toolbarNarrow","defaultOptions","filterType","selectableRows","download","print","sortFilterList","viewColumns","elevation","textLabels","body","noMatch","toolTip","columnHeaderTooltip","column","label","filter","all","title","reset","toolbar","search","filterTable","pagination","next","previous","rowsPerPage","displayRows","ThemeProvider","customizedTheme","content","minWidth","AlertDialog","open","contentText","cancelText","handleCancel","continueText","handleContinue","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","autoFocus","continueButton","actionButtons","validate","validators","checked","value","message","email","margin","DateField","field","onChange","helperText","maxDate","Date","minDate","maxDateMessage","type","getFullYear","toLocaleDateString","minDateMessage","invalidDateMessage","dateProps","format","name","openTo","views","autoOk","orientation","inputVariant","variant","fullWidth","emptyLabel","required","isRequired","utils","DateFnsUtils","locale","viLocale","DynamicForm","formRef","formData","onFormIsValid","schema","reduce","obj","result","presence","allowEmpty","length","maximum","minimum","includes","tooShort","tooLong","notValid","equality","useState","isValid","values","undefined","defaultValue","now","touched","errors","formState","setFormState","useEffect","current","handleChange","event","persist","target","hasError","map","index","key","date","handleDateChange","FormControl","InputLabel","Select","labelId","MenuItem","Boolean","TextField","inputProps","FormDialog","description","isLoading","formIsValid","setFormIsValid","useRef","onSubmit","autoComplete","disabled","preventDefault","confirmPassword","forEach","toString","parseFloat","CircularProgress","justifyContent","dotIcon","turnOn","turnOff","report","maintained","liquiadted","EventAction","action","avatar","boxShadow","LatestEventsList","activeEvents","hidden","setCellProps","style","setCellHeaderProps","createdAt","toLocaleString","toLocaleTimeString","device","faculty","creator","firstName","lastName","employeeId","reported","actionType","Card","CardContent","responsive","Footer","Link","ADMIN","DASHBOARD","SIGN_IN","marginTop","connect","state","me","role","accessToken","dispatch","user","uri","bio","Avatar","alt","RouterLink","src","to","item","paddingTop","paddingBottom","fontWeightMedium","active","borderLeft","CustomRouterLink","forwardRef","ref","SidebarNav","pages","List","page","ListItem","disableGutters","activeClassName","href","media","textAlign","actions","drawer","breakpoints","up","nav","marginBottom","Sidebar","routes","Drawer","anchor","Divider","gql","SIGN_UP","FORGOT_PASSWORD","RESET_PASSWORD","SIGN_OUT","ADD_DEVICE","signOutButton","marginLeft","boxLogo","brandName","logo","Topbar","onSidebarOpen","notifications","useMutation","signOut","client","handleSignOut","a","resetStore","window","location","AppBar","Toolbar","Hidden","mdDown","IconButton","Badge","badgeContent","lgUp","shiftContent","Main","children","useTheme","isDesktop","useMediaQuery","defaultMatches","openSidebar","setOpenSidebar","shouldOpenSidebar","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTypography","gutterBottom","zIndex","appBar","position","grid","quoteContainer","down","quote","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","quoteInner","quoteText","Minimal","Grid","container","xs","details","progress","uploadButton","ME","USERS","DEVICES","ACTIVE_EVENTS","ACTIVE_EVENTS_BY_USER","ACTIVE_EVENTS_BY_DEVICE","Users","userNumber","justify","Devices","deviceNumber","ActiveEvents","eventNumber","ReportEvents","LiquidatedDevices","getPath","x","y","CustomizedShape","Fragment","offset","stopColor","stopOpacity","x1","x2","y1","y2","xlinkHref","d","stroke","fill","mockDate","today","i","yes","getDate","getMonth","push","uv","pv","amt","ele","UsageChart","maxBarSize","top","right","left","bottom","vertical","strokeDasharray","axisLine","tickLine","dataKey","shape","updateMe","payload","updateUsers","users","updateDevices","devices","updateActiveEvents","events","usersActions","devicesActions","activeEventsActions","useQuery","usersData","usersLoading","loading","devicesData","devicesLoading","activeEventsData","activeEventsLoading","console","log","reportEventsNumber","maintainedDevicesNumber","avaibility","liquidatedDevicesNumber","totalCount","MaintenanceDevices","image","maxWidth","NotFound","imageContainer","border","overflow","statsItem","statsIcon","ProductsToolbar","onAddNewDevice","startIcon","replace","split","slice","v","toUpperCase","join","addNewDeviceForm","DevicesDialog","React","memo","dialogState","onCloseDialog","addDevice","handleCreateNewDevice","deviceInfo","variables","deviceInput","onDownloadQrCode","fetch","then","response","blob","url","URL","createObjectURL","document","createElement","pop","click","dialogType","disableBackdropClick","switchDialog","prevProps","nextProps","_","isEqual","backIcon","deleteDeviceButton","EditDevice","profile","editDeviceForm","model","manufacturer","origin","manufacturedYear","startUseTime","startUseState","originalPrice","CardHeader","subheader","CardActions","DeviceProfile","onGoBack","deviceId","activeEventsByDevice","DeviceList","selectedDevice","setSelectedDevice","setDialogState","onRowClick","rowData","rowMeta","dataIndex","sort","customBodyRender","handleQRViewClick","SvgIcon","stopPropagation","DevicesToolbar","Password","reduxSignOut","meActions","history","bioInfo","deleteAvatarButton","UserBio","phone","profileArray","Object","finishRate","Math","ceil","accum","noWrap","getInitials","LinearProgress","deleteUserButton","EditInfo","editUserForm","Settings","contentHeader","paddingBototm","contentBody","form","socialButtons","socialIcon","sugestion","textField","signInButton","wrapper","buttonProgress","sameLine","method","headers","Authorization","JSON","stringify","query","loc","source","json","Error","withRouter","signIn","handleSignIn","meQuery","policy","policyCheckbox","signUpButton","checkBoxState","setCheckBoxState","handleSignUp","Checkbox","policyText","underline","FormHelperText","inner","nameContainer","UsersToolbar","onAddNewUser","addNewUserForm","UsersDialog","handleCreateNewUser","userInfo","UserProfile","userId","activeEventsByUser","UserList","setDialogType","openDialog","setOpenDialog","selectedUser","setSelectedUser","rowIndex","resetPasswordButton","alertState","setAlertState","sendForgotPasswordEmail","handleResetPassword","handleOnCompleted","err","handleOnError","transform","buttonDirect","ConfirmNotification","confirmToken","match","params","confirmButton","password","passwordToken","resetPassword","handleConfirm","newPassword","maxHeight","backdrop","common","opacity","more","subTitle","Landing","Container","align","boxSizing","Policy","rel","createBrowserHistory","pathname","authRoutes","exact","from","LandingView","path","PolicyView","NotFoundView","MinimalLayout","SignInView","SignUpView","ForgotPasswordView","ConfirmNotificationView","ResetPasswordView","DashboardView","MainLayout","UserListView","DeviceListView","SettingsView","setLoading","credentials","initialState","language","pageInfo","endCursor","hasNextPage","combineReducers","newState","store","createStore","rootReducers","__REDUX_DEVTOOLS_EXTENSION__","httpLink","createUploadLink","authLink","ApolloLink","operation","foward","Observable","observer","handle","Promise","resolve","getState","setContext","authorization","subscribe","bind","complete","catch","unsubscribe","refreshTokenLink","TokenRefreshLink","accessTokenField","isTokenValidOrUndefined","exp","jwtDecode","fetchAccessToken","handleFetch","handleError","warn","cache","InMemoryCache","ApolloClient","ReactDOM","graphqlCLient","getElementById"],"mappings":"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","file":"static/js/main.795133ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Paper, Input } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    borderRadius: '4px',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1),\r\n    display: 'flex',\r\n    flexBasis: 420\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  input: {\r\n    flexGrow: 1,\r\n    fontSize: '14px',\r\n    lineHeight: '16px',\r\n    letterSpacing: '-0.05px'\r\n  }\r\n}));\r\n\r\nconst SearchInput = props => {\r\n  const { className, onChange, style, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      style={style}\r\n    >\r\n      <SearchIcon className={classes.icon} />\r\n      <Input\r\n        {...rest}\r\n        className={classes.input}\r\n        disableUnderline\r\n        onChange={onChange}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nSearchInput.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'inline-block',\r\n    borderRadius: '50%',\r\n    flexGrow: 0,\r\n    flexShrink: 0\r\n  },\r\n  sm: {\r\n    height: theme.spacing(1),\r\n    width: theme.spacing(1)\r\n  },\r\n  md: {\r\n    height: theme.spacing(2),\r\n    width: theme.spacing(2)\r\n  },\r\n  lg: {\r\n    height: theme.spacing(3),\r\n    width: theme.spacing(3)\r\n  },\r\n  neutral: {\r\n    backgroundColor: theme.palette.neutral\r\n  },\r\n  primary: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.info.main\r\n  },\r\n  warning: {\r\n    backgroundColor: theme.palette.warning.main\r\n  },\r\n  danger: {\r\n    backgroundColor: theme.palette.error.main\r\n  },\r\n  success: {\r\n    backgroundColor: theme.palette.success.main\r\n  }\r\n}));\r\n\r\nconst StatusBullet = props => {\r\n  const { className, size, color, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <span\r\n      {...rest}\r\n      className={clsx(\r\n        {\r\n          [classes.root]: true,\r\n          [classes[size]]: size,\r\n          [classes[color]]: color\r\n        },\r\n        className\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nStatusBullet.propTypes = {\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    'neutral',\r\n    'primary',\r\n    'info',\r\n    'success',\r\n    'warning',\r\n    'danger'\r\n  ]),\r\n  size: PropTypes.oneOf(['sm', 'md', 'lg'])\r\n};\r\n\r\nStatusBullet.defaultProps = {\r\n  size: 'md',\r\n  color: 'default'\r\n};\r\n\r\nexport default StatusBullet;\r\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst RouteWithLayout = props => {\n  const { layout: Layout, component: Component, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <Layout>\n          <Component {...matchProps} />\n        </Layout>\n      )}\n    />\n  );\n};\n\nRouteWithLayout.propTypes = {\n  component: PropTypes.any.isRequired,\n  layout: PropTypes.any.isRequired,\n  path: PropTypes.string\n};\n\nexport default RouteWithLayout;\n","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\nconst purple = '#C40AA6';\nconst blue = '#3B95FF';\nconst orange = '#FF993B';\nconst yellow = '#FFEE58';\nconst red = '#D82626';\n\nexport default {\n  black,\n  white,\n  purple,\n  blue,\n  orange,\n  yellow,\n  red,\n  gradient: 'linear-gradient(90deg, #0AC4BA 0%, #2BDA8E 100%)',\n  primary: {\n    contrastText: white,\n    dark: '#0AC4BA',\n    main: '#47B881',\n    light: '#D3FFEC'\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\nimport palette from 'src/theme/palette';\nimport typography from 'src/theme/typography';\n\nexport default (toolbarPaddingNarrow = false) => {\n  return createMuiTheme({\n    palette,\n    typography,\n    overrides: {\n      MUIDataTableHeadCell: {\n        sortAction: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        sortActive: {\n          color: palette.primary.dark\n        }\n      },\n      MuiTableSortLabel: {\n        icon: {\n          color: `${palette.primary.dark} !important`\n        }\n      },\n      MuiTableRow: {\n        root: {\n          '&:nth-of-type(odd)': {\n            backgroundColor: palette.white\n          },\n          '&:nth-of-type(even)': {\n            backgroundColor: palette.primary.light\n          },\n          transition: 'background-color 250ms',\n          '&$hover': {\n            '&:hover': {\n              cursor: 'pointer'\n            }\n          }\n        }\n      },\n      MuiTableHead: {\n        root: {\n          borderBottom: '2px solid #E4E7EB'\n        }\n      },\n      MuiToolbar: toolbarPaddingNarrow && {\n        regular: {\n          paddingLeft: 16,\n          paddingRight: 4,\n          '@media (min-width: 600px)': {\n            minHeight: 48\n          }\n        }\n      },\n      MUIDataTable: {\n        responsiveStacked: {\n          overflowX: 'hidden'\n        }\n      }\n    }\n  });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MUIDataTable from 'mui-datatables';\nimport { ThemeProvider } from '@material-ui/core';\nimport customizedTheme from './customizedTheme';\n\nconst MaterialTable = props => {\n  const { columns, data, options, toolbarNarrow = false, ...rest } = props;\n\n  const defaultOptions = {\n    filterType: 'dropdown',\n    selectableRows: 'none',\n    download: false,\n    print: false,\n    sortFilterList: false,\n    viewColumns: false,\n    elevation: 0,\n    textLabels: {\n      body: {\n        noMatch: 'Xin lỗi, không tìm thấy dữ liệu để hiển thị',\n        toolTip: 'Sắp xếp',\n        columnHeaderTooltip: column => `Sắp xếp theo ${column.label}`\n      },\n      filter: {\n        all: 'Tất cả',\n        title: 'BỘ LỌC',\n        reset: 'Đặt lại'\n      },\n      toolbar: {\n        search: 'Tìm kiếm',\n        filterTable: 'Bộ lọc',\n        viewColumns: 'Hiển thị cột'\n      },\n      pagination: {\n        next: 'Trang kế tiếp',\n        previous: 'Trang trước',\n        rowsPerPage: 'Số hàng mỗi trang:',\n        displayRows: 'trong'\n      }\n    },\n    ...options\n  };\n\n  return (\n    <ThemeProvider theme={customizedTheme(toolbarNarrow)}>\n      <MUIDataTable\n        data={data}\n        columns={columns}\n        options={defaultOptions}\n        {...rest}\n      />\n    </ThemeProvider>\n  );\n};\n\nMaterialTable.propTypes = {\n  columns: PropTypes.array,\n  data: PropTypes.array,\n  options: PropTypes.object,\n  toolbarNarrow: PropTypes.bool\n};\n\nexport default MaterialTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    minWidth: 300\n  }\n}));\n\nconst AlertDialog = props => {\n  const {\n    open,\n    title,\n    contentText,\n    content,\n    cancelText,\n    handleCancel,\n    continueText,\n    handleContinue,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      {...rest}\n      onClose={handleCancel}\n      open={open}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\">\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent className={classes.content}>\n        {contentText && (\n          <DialogContentText id=\"alert-dialog-description\">\n            {contentText}\n          </DialogContentText>\n        )}\n        {content}\n      </DialogContent>\n      <DialogActions>\n        {handleCancel && <Button onClick={handleCancel}>{cancelText}</Button>}\n        {handleContinue && (\n          <Button onClick={handleContinue} color=\"primary\" autoFocus>\n            {continueText}\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nAlertDialog.propTypes = {\n  cancelText: PropTypes.string,\n  contentText: PropTypes.string,\n  content: PropTypes.node,\n  continueText: PropTypes.string,\n  handleCancel: PropTypes.func,\n  handleContinue: PropTypes.func,\n  open: PropTypes.bool,\n  title: PropTypes.string\n};\n\nAlertDialog.defaultProps = {\n  open: true,\n  title: '',\n  content: '',\n  cancelText: 'Cancel',\n  continueText: 'Continue'\n};\n\nexport default AlertDialog;\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    minWidth: theme.spacing(50)\n  },\n  continueButton: {\n    minWidth: theme.spacing(15)\n  },\n  actionButtons: {\n    padding: theme.spacing(1, 3)\n  }\n}));\n","import validate from 'validate.js';\n\nconst validators = {\n  checked: (value, options) => {\n    if (value !== true) {\n      return options.message || 'phải được xác nhận';\n    }\n    return true;\n  }\n};\n\nvalidate.validators = {\n  ...validate.validators,\n  ...validators\n};\n\nvalidate.validators.email.message = 'không hợp lệ';\n\nexport default validate;\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles(theme => ({\n  input: {\n    /* Chrome, Safari, Edge, Opera */\n    '&::-webkit-outer-spin-button': {\n      '-webkit-appearance': 'none',\n      margin: 0\n    },\n    '&::-webkit-inner-spin-button': {\n      '-webkit-appearance': 'none',\n      margin: 0\n    },\n\n    /* Firefox */\n    '&[type=number]': {\n      ' -moz-appearance': 'textfield'\n    }\n  }\n}));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport viLocale from 'date-fns/locale/vi';\nimport { TextField } from '@material-ui/core';\n\n/* eslint-disable react/display-name */\nconst DateField = props => {\n  const { field, value, onChange, helperText, error } = props;\n\n  const maxDate = new Date('1/1/2100');\n  const minDate = new Date('1/1/1970');\n  const maxDateMessage = `${field.label} phải nhỏ hơn ${\n    field.type === 'year' ? maxDate.getFullYear() : maxDate.toLocaleDateString()\n  }`;\n  const minDateMessage = `${field.label} phải lớn hơn ${\n    field.type === 'year' ? minDate.getFullYear() : minDate.toLocaleDateString()\n  }`;\n\n  const invalidDateMessage = `${\n    field.type === 'year' ? 'Năm' : 'Ngày'\n  } không đúng định dạng`;\n\n  const dateProps = {\n    label: field.label,\n    value,\n    format: field.type === 'year' ? 'yyyy' : 'dd/MM/yyyy',\n    name: field.name,\n    openTo: field.type,\n    views: [field.type],\n    onChange,\n    autoOk: true,\n    orientation: 'landscape',\n    inputVariant: 'outlined',\n    variant: 'inline',\n    fullWidth: true,\n    margin: 'normal',\n    maxDate,\n    minDateMessage,\n    emptyLabel: '(Không rõ)',\n    maxDateMessage,\n    invalidDateMessage,\n    required: field.isRequired\n  };\n\n  if (error) {\n    dateProps.error = error;\n    dateProps.helperText = helperText;\n  } else {\n    delete dateProps.error;\n    delete dateProps.helperText;\n  }\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={viLocale}>\n      <KeyboardDatePicker {...dateProps} />\n    </MuiPickersUtilsProvider>\n  );\n};\n\nDateField.propTypes = {\n  field: PropTypes.object,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.object\n  ]),\n  helperText: PropTypes.string,\n  error: PropTypes.bool,\n  onChange: PropTypes.func\n};\n\nexport default DateField;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport validate from 'src/utils/validateOverride';\nimport {\n  TextField,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormControl\n} from '@material-ui/core';\nimport useStyles from './dynamicFormStyles';\nimport DateField from '../DateField';\n\nconst DynamicForm = props => {\n  const { formRef, formData, onFormIsValid, autoFocus, error } = props;\n\n  const classes = useStyles();\n  const schema = formData.reduce((obj, field) => {\n    const result = {\n      ...obj,\n      [field.name]: {\n        presence: {\n          allowEmpty: !field.isRequired,\n          message: `^${field.label} là bắt buộc`\n        },\n        email: field.name === 'email',\n        length: {\n          maximum: 128,\n          minimum: ['oldPassword', 'password', 'confirmPassword'].includes(\n            field.name\n          )\n            ? 3\n            : 0,\n          tooShort: `^${field.label} phải có tối thiểu %{count} ký tự`,\n          tooLong: `^${field.label} phải có tối đa %{count} ký tự`,\n          notValid: `^${field.label} không hợp lệ`\n        },\n        equality: field.name === 'confirmPassword' && 'password'\n      }\n    };\n    if (\n      field.type === 'year' ||\n      field.type === 'date' ||\n      field.type === 'select'\n    ) {\n      delete result[field.name].length;\n    }\n    return result;\n  }, {});\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: formData.reduce(\n      (obj, field) => ({\n        ...obj,\n        [field.name]:\n          field.defaultValue !== undefined\n            ? field.defaultValue\n            : field.type === 'date' || field.type === 'year'\n            ? Date.now()\n            : field.type === 'select'\n            ? true\n            : ''\n      }),\n      {}\n    ),\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n    const isValid = errors ? false : true;\n    isValid !== formState.isValid && onFormIsValid && onFormIsValid(isValid);\n    setFormState(formState => ({\n      ...formState,\n      isValid,\n      errors: errors || {}\n    }));\n\n    formRef.current = formState.values;\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]: event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleDateChange = (date, name) => {\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [name]: date\n      },\n      touched: {\n        ...formState.touched,\n        [name]: true\n      }\n    }));\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Fragment>\n      {formData.map((field, index) => {\n        // if (field.type === 'checkbox') return <div key={field.name} />;\n        if (field.type === 'year' || field.type === 'date')\n          return (\n            <DateField\n              key={field.name}\n              onChange={date => handleDateChange(date, field.name)}\n              field={field}\n              value={formState.values[field.name]}\n              helperText={\n                hasError(field.name) ? formState.errors[field.name][0] : null\n              }\n              error={hasError(field.name)}\n            />\n          );\n        if (field.type === 'select')\n          return (\n            <FormControl\n              variant=\"outlined\"\n              key={field.name}\n              fullWidth\n              margin=\"normal\"\n              // className={classes.formControl}>\n            >\n              <InputLabel id=\"select-label\">{field.label}</InputLabel>\n              <Select\n                labelId=\"select-label\"\n                id=\"select\"\n                name={field.name}\n                value={formState.values[field.name]}\n                onChange={handleChange}\n                label={field.label}>\n                <MenuItem value={Boolean(1)}>Mới</MenuItem>\n                <MenuItem value={Boolean(0)}>Cũ</MenuItem>\n              </Select>\n            </FormControl>\n          );\n\n        return (\n          <TextField\n            inputProps={{ className: classes.input, type: field.type }}\n            autoFocus={autoFocus && index === 0}\n            key={field.name}\n            margin=\"normal\"\n            name={field.name}\n            label={field.label}\n            type={field.type}\n            onChange={handleChange}\n            required={field.isRequired}\n            helperText={\n              hasError(field.name) ? formState.errors[field.name][0] : null\n            }\n            error={hasError(field.name)}\n            value={formState.values[field.name] || ''}\n            variant=\"outlined\"\n            fullWidth\n          />\n        );\n      })}\n    </Fragment>\n  );\n};\n\nDynamicForm.propTypes = {\n  formRef: PropTypes.shape({ current: PropTypes.object }),\n  formData: PropTypes.array,\n  onFormIsValid: PropTypes.func,\n  error: PropTypes.object,\n  autoFocus: PropTypes.bool\n};\n\nexport default DynamicForm;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n  CircularProgress\n} from '@material-ui/core';\nimport useStyles from './formDialogStyles';\nimport DynamicForm from '../DynamicForm';\n\nconst FormDialog = props => {\n  const {\n    open,\n    title,\n    formData,\n    cancelText,\n    handleCancel,\n    continueText,\n    handleContinue,\n    description,\n    isLoading,\n    error,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const formRef = useRef(null);\n\n  const _handleCancel = () => {\n    handleCancel && handleCancel();\n  };\n\n  const _handleContinue = event => {\n    event.preventDefault();\n    delete formRef.current.confirmPassword;\n    formData.forEach(field => {\n      if (field.type === 'year' || field.type === 'date') {\n        formRef.current[field.name] = !formRef.current[field.name]\n          ? null\n          : field.type === 'year'\n          ? new Date(formRef.current[field.name]).getFullYear().toString()\n          : new Date(formRef.current[field.name]);\n      }\n      if (field.type === 'number')\n        formRef.current[field.name] = parseFloat(formRef.current[field.name]);\n    });\n\n    handleContinue && handleContinue(formRef.current);\n    // setOpen(false);\n  };\n\n  return (\n    <Dialog\n      {...rest}\n      onClose={handleCancel}\n      open={open}\n      aria-labelledby=\"form-dialog-title\"\n      aria-describedby=\"form-dialog-description\">\n      <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n      <form onSubmit={handleContinue} autoComplete=\"off\">\n        <DialogContent className={classes.content}>\n          <DialogContentText id=\"form-dialog-description\">\n            {description}\n          </DialogContentText>\n          <DynamicForm\n            formRef={formRef}\n            formData={formData}\n            onFormIsValid={setFormIsValid}\n            autoFocus\n            error={error}\n          />\n        </DialogContent>\n        <DialogActions className={classes.actionButtons}>\n          <Button onClick={_handleCancel}>{cancelText}</Button>\n          <Button\n            className={classes.continueButton}\n            type=\"submit\"\n            variant=\"contained\"\n            disabled={!formIsValid}\n            color=\"primary\"\n            onClick={_handleContinue}>\n            {isLoading ? (\n              <CircularProgress color=\"secondary\" size={24} />\n            ) : (\n              continueText\n            )}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nFormDialog.propTypes = {\n  cancelText: PropTypes.string,\n  content: PropTypes.string,\n  continueText: PropTypes.string,\n  handleCancel: PropTypes.func,\n  handleContinue: PropTypes.func,\n  open: PropTypes.bool,\n  formData: PropTypes.array,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  isLoading: PropTypes.bool,\n  error: PropTypes.object\n};\n\nFormDialog.defaultProps = {\n  open: true,\n  title: '',\n  content: '',\n  cancelText: 'Cancel',\n  continueText: 'Continue',\n  isLoading: false\n};\n\nexport default FormDialog;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  dotIcon: {\n    height: 8,\n    width: 8,\n    borderRadius: '50%',\n    display: 'inline-block',\n    marginRight: theme.spacing(2)\n  },\n  turnOn: { backgroundColor: theme.palette.success.main },\n  turnOff: { backgroundColor: theme.palette.purple },\n  report: { backgroundColor: theme.palette.yellow },\n  maintained: { backgroundColor: theme.palette.orange },\n  liquiadted: { backgroundColor: theme.palette.red }\n}));\n\nconst EventAction = props => {\n  const classes = useStyles();\n\n  const { action } = props;\n\n  let message = '';\n  switch (action) {\n    case 'turnOn':\n      message = 'Bật Thiết bị';\n      break;\n    case 'turnOff':\n      message = 'Tắt Thiết bị';\n      break;\n    case 'report':\n      message = 'Báo cáo';\n      break;\n    case 'maintained':\n      message = 'Bảo trì thiết bị';\n      break;\n    case 'liquidated':\n      message = 'Thanh lý thiết bị';\n      break;\n  }\n\n  return (\n    <div className={classes.root}>\n      <span className={clsx(classes.dotIcon, classes[action])} />\n      <Typography>{message}</Typography>\n    </div>\n  );\n};\n\nEventAction.propTypes = {\n  action: PropTypes.oneOf([\n    'turnOn',\n    'turnOff',\n    'report',\n    'maintained',\n    'liquiadted'\n  ])\n};\n\nexport default EventAction;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Typography } from '@material-ui/core';\nimport { MaterialTable } from 'src/components';\nimport EventAction from './EventAction';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    padding: 0\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.purple,\n    height: 64,\n    width: 64,\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n  },\n  icon: {\n    height: 32,\n    width: 32\n  }\n}));\n\nconst LatestEventsList = props => {\n  const { className, activeEvents, hidden, ...rest } = props;\n  const classes = useStyles();\n\n  const options = {\n    pagination: false,\n    responsive: 'scroll'\n  };\n\n  const columns = [\n    {\n      label: 'Thời điểm',\n      name: 'createdAt',\n      options: {\n        filter: false\n      }\n    },\n    {\n      label: 'Thiết bị',\n      name: 'device',\n      options: {\n        display: hidden !== 'device',\n        setCellProps: () => ({ style: { fontWeight: 500 } })\n      }\n    },\n    {\n      label: 'Người dùng',\n      name: 'creator',\n      options: {\n        display: hidden !== 'creator'\n      }\n    },\n    {\n      label: 'Hành động',\n      name: 'action',\n      options: {\n        setCellHeaderProps: () => ({\n          style: {\n            justifyContent: 'flex-end',\n            display: 'flex'\n          }\n        })\n      }\n    }\n  ];\n\n  const data = activeEvents?.map(event => ({\n    createdAt: hidden\n      ? new Date(event.createdAt).toLocaleString()\n      : new Date(event.createdAt).toLocaleTimeString(),\n    device:\n      hidden === 'device'\n        ? ''\n        : `${event.device.title} (${event.device.faculty})`,\n    creator:\n      hidden === 'creator'\n        ? ''\n        : event.creator.firstName\n        ? `${event.creator.lastName} ${event.creator.firstName}`\n        : event.creator.employeeId || '',\n    action: event.reported ? (\n      <EventAction action={'report'} />\n    ) : event.actionType ? (\n      <EventAction action={'turnOn'} />\n    ) : (\n      <EventAction action={'turnOff'} />\n    )\n  }));\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardContent classes={{ root: classes.root }}>\n        <MaterialTable\n          toolbarNarrow\n          title={\n            <Typography className={classes.title} variant=\"body2\">\n              SỰ KIỆN MỚI NHẤT\n            </Typography>\n          }\n          columns={columns}\n          data={data}\n          options={options}\n        />\n      </CardContent>\n    </Card>\n  );\n};\n\nLatestEventsList.propTypes = {\n  className: PropTypes.string,\n  activeEvents: PropTypes.array,\n  hidden: PropTypes.string\n};\n\nexport default LatestEventsList;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Link } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Footer = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div {...rest} className={clsx(classes.root, className)}>\r\n      <Typography variant=\"body1\">\r\n        &copy;{' '}\r\n        <Link component=\"a\" target=\"_blank\">\r\n          IAA Co., Ltd\r\n        </Link>\r\n        . 2020\r\n      </Typography>\r\n      {/* <Typography variant=\"caption\">\r\n        Created with love for the environment. By designers and developers who\r\n        love to work together in offices!\r\n      </Typography> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Footer;\r\n","export const HOME = '/';\nexport const ADMIN = '/admin';\n\nexport const DASHBOARD = ADMIN + '/dashboard';\nexport const USERS = ADMIN + '/users';\nexport const DEVICES = ADMIN + '/devices';\nexport const EVENTS = ADMIN + '/events';\nexport const SETTINGS = ADMIN + '/settings';\n\nexport const SIGN_IN = '/sign-in';\nexport const SIGN_UP = '/sign-up';\nexport const FORGOT_PASSWORD = '/forgot-password';\nexport const CHANGE_PASSWORD = '/change-password';\nexport const CONFIRM_NOTIFICATION = '/confirm';\nexport const RESET_PASSWORD = '/reset-password';\n\nexport const POLICY = '/policy';\n\nexport const NOT_FOUND = '/not-found';\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Typography } from '@material-ui/core';\nimport { connect } from 'react-redux';\n\nimport * as routes from 'src/common/routes';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    minHeight: 'fit-content'\n  },\n  avatar: {\n    width: 100,\n    height: 100,\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n  },\n  name: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst Profile = props => {\n  const {\n    className,\n    lastName,\n    firstName,\n    avatar,\n    role,\n    employeeId,\n    createdAt,\n    accessToken,\n    dispatch,\n    ...rest\n  } = props;\n  const classes = useStyles();\n\n  const user = {\n    name: `${lastName} ${firstName}`,\n    avatar: avatar.uri,\n    bio: role\n  };\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Avatar\n        alt=\"Person\"\n        className={classes.avatar}\n        component={RouterLink}\n        src={user.avatar}\n        to={routes.SETTINGS}\n      />\n      <Typography className={classes.name} variant=\"h4\">\n        {user.name}\n      </Typography>\n      <Typography variant=\"body2\">{user.bio}</Typography>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string,\n  lastName: PropTypes.string,\n  firstName: PropTypes.string,\n  avatar: PropTypes.object,\n  role: PropTypes.string\n};\n\nconst mapStateToProps = state => state.me;\n\nexport default connect(mapStateToProps)(Profile);\n","/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\nimport React, { forwardRef } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { List, ListItem, Button, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: colors.blueGrey[800],\n    padding: '10px 8px',\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%',\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  icon: {\n    color: theme.palette.icon,\n    width: 24,\n    height: 24,\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: theme.spacing(1)\n  },\n  active: {\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightMedium,\n    '& $icon': {\n      color: theme.palette.primary.main\n    },\n    backgroundColor: '#D3FFEC',\n    borderRadius: 0,\n    borderLeft: `4px solid ${theme.palette.primary.main}`\n  }\n}));\n\nconst CustomRouterLink = forwardRef((props, ref) => (\n  <div ref={ref} style={{ flexGrow: 1 }}>\n    <RouterLink {...props} />\n  </div>\n));\n\nconst SidebarNav = props => {\n  const { pages, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <List {...rest} className={clsx(classes.root, className)}>\n      {pages.map(page => (\n        <ListItem className={classes.item} disableGutters key={page.title}>\n          <Button\n            activeClassName={classes.active}\n            className={classes.button}\n            component={CustomRouterLink}\n            to={page.href}>\n            <div className={classes.icon}>{page.icon}</div>\n            {page.title}\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nSidebarNav.propTypes = {\n  className: PropTypes.string,\n  pages: PropTypes.array.isRequired\n};\n\nexport default SidebarNav;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Divider, Drawer } from '@material-ui/core';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\n// import ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\n// import TextFieldsIcon from '@material-ui/icons/TextFields';\n// import ImageIcon from '@material-ui/icons/Image';\n// import AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport SettingsIcon from '@material-ui/icons/Settings';\n// import LockOpenIcon from '@material-ui/icons/LockOpen';\nimport DeviceHubIcon from '@material-ui/icons/DeviceHub';\nimport EventIcon from '@material-ui/icons/Event';\n\nimport { Profile, SidebarNav } from './components';\nimport * as routes from 'src/common/routes';\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: 240,\n    [theme.breakpoints.up('lg')]: {\n      marginTop: 64,\n      height: 'calc(100% - 64px)'\n    }\n  },\n  root: {\n    backgroundColor: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    padding: theme.spacing(2)\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  nav: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst Sidebar = props => {\n  const { open, variant, onClose, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const pages = [\n    {\n      title: 'Dashboard',\n      href: routes.DASHBOARD,\n      icon: <DashboardIcon />\n    },\n    {\n      title: 'Người dùng',\n      href: routes.USERS,\n      icon: <PeopleIcon />\n    },\n    {\n      title: 'Thiết bị',\n      href: routes.DEVICES,\n      icon: <DeviceHubIcon />\n    },\n    // {\n    //   title: 'Sự kiện',\n    //   href: routes.EVENTS,\n    //   icon: <EventIcon />\n    // },\n    // {\n    //   title: 'Products',\n    //   href: '/products',\n    //   icon: <ShoppingBasketIcon />\n    // },\n    // {\n    //   title: 'Authentication',\n    //   href: '/sign-in',\n    //   icon: <LockOpenIcon />\n    // },\n    // {\n    //   title: 'Typography',\n    //   href: '/typography',\n    //   icon: <TextFieldsIcon />\n    // },\n    // {\n    //   title: 'Icons',\n    //   href: '/icons',\n    //   icon: <ImageIcon />\n    // },\n    // {\n    //   title: 'Account',\n    //   href: '/account',\n    //   icon: <AccountBoxIcon />\n    // },\n    {\n      title: 'Cài đặt',\n      href: routes.SETTINGS,\n      icon: <SettingsIcon />\n    }\n  ];\n\n  return (\n    <Drawer\n      anchor=\"left\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant={variant}>\n      <div {...rest} className={clsx(classes.root, className)}>\n        <Profile />\n        <Divider className={classes.divider} />\n        <SidebarNav className={classes.nav} pages={pages} />\n      </div>\n    </Drawer>\n  );\n};\n\nSidebar.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  variant: PropTypes.string.isRequired\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Button, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: colors.grey[50]\n  },\n  media: {\n    paddingTop: theme.spacing(2),\n    height: 80,\n    textAlign: 'center',\n    '& > img': {\n      height: '100%',\n      width: 'auto'\n    }\n  },\n  content: {\n    padding: theme.spacing(1, 2)\n  },\n  actions: {\n    padding: theme.spacing(1, 2),\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst UpgradePlan = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <div className={classes.media}>\n        <img\n          alt=\"Upgrade to PRO\"\n          src=\"/images/undraw_resume_folder_2_arse.svg\"\n        />\n      </div>\n      <div className={classes.content}>\n        <Typography align=\"center\" gutterBottom variant=\"h5\">\n          Upgrade to PRO\n        </Typography>\n        <Typography align=\"center\" variant=\"body2\">\n          Upgrade to Devias Kit PRO and get even more components\n        </Typography>\n      </div>\n      <div className={classes.actions}>\n        <Button\n          color=\"primary\"\n          component=\"a\"\n          href=\"https://devias.io/products/devias-kit-pro\"\n          variant=\"contained\">\n          Upgrade\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nUpgradePlan.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UpgradePlan;\n","import gql from 'graphql-tag';\n\n// Used for signing in with email and password\n// Get back accessToken when success\nconst SIGN_IN = gql`\n  mutation SignIn($email: String!, $password: String!) {\n    signIn(email: $email, password: $password) {\n      accessToken\n    }\n  }\n`;\n\n// Used for signing up with email and password\n// Get back true when success\nconst SIGN_UP = gql`\n  mutation SignUp($email: String!, $password: String!) {\n    signUp(email: $email, password: $password)\n  }\n`;\n\n// This one is deprecated - The /confirm endpoint is now doing this job.\n// Can consider to using this in the future\nconst CONFIRM_EMAIL = gql`\n  mutation ConfirmEmail($confirmToken: String!) {\n    confirmEmail(confirmToken: $confirmToken)\n  }\n`;\n\n//Used for sending an forgot password url to recipient's email\n//Get back true when success\nconst FORGOT_PASSWORD = gql`\n  mutation ForgotPassword($email: String!) {\n    forgotPassword(email: $email)\n  }\n`;\n\n//Used for change password when signed in\n//Get back true when success\nconst CHANGE_PASSWORD = gql`\n  mutation ChangePassword($oldPassword: String!, $newPassword: String!) {\n    changePassword(oldPassword: $oldPassword, newPassword: $newPassword)\n  }\n`;\n\n//Used for reset password within forgot password url\n//Get back true when success\nconst RESET_PASSWORD = gql`\n  mutation ResetPassword($newPassword: String!, $passwordToken: String!) {\n    resetPassword(newPassword: $newPassword, passwordToken: $passwordToken)\n  }\n`;\n\n//Used for signing out\n//Get back true when success\nconst SIGN_OUT = gql`\n  mutation SignOut {\n    signOut\n  }\n`;\n\nconst AVATAR_UPLOAD = gql`\n  mutation AvatarUpload($file: Upload!) {\n    avatarUpload(file: $file)\n  }\n`;\n\nconst UPDATE_USER = gql`\n  mutation UpdateUser($userInput: UserInput!) {\n    updateUser(userInput: $userInput) {\n      id\n    }\n  }\n`;\n\nconst ADD_DEVICE = gql`\n  mutation AddDevice($deviceInput: DeviceInput!) {\n    addDevice(deviceInput: $deviceInput) {\n      id\n    }\n  }\n`;\n\nexport {\n  SIGN_IN,\n  SIGN_UP,\n  CONFIRM_EMAIL,\n  FORGOT_PASSWORD,\n  CHANGE_PASSWORD,\n  RESET_PASSWORD,\n  SIGN_OUT,\n  AVATAR_UPLOAD,\n  UPDATE_USER,\n  ADD_DEVICE\n};\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { useMutation } from 'react-apollo';\r\nimport { setAccessToken } from 'src/utils/accessToken';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Badge,\r\n  Hidden,\r\n  IconButton,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport * as routes from 'src/common/routes';\r\nimport { SIGN_OUT } from 'src/utils/graphqlMutations';\r\n// import { history } from 'src/components/Routes/Routes';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    boxShadow: 'none',\r\n    background: theme.palette.gradient\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1\r\n  },\r\n  signOutButton: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  boxLogo: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  brandName: {\r\n    color: theme.palette.white,\r\n    marginLeft: theme.spacing(2),\r\n    textTransform: 'uppercase',\r\n    fontWeight: 'bold'\r\n  },\r\n  logo: {\r\n    width: 40\r\n  }\r\n}));\r\n\r\nconst Topbar = props => {\r\n  const { className, onSidebarOpen, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [notifications] = useState([]);\r\n\r\n  const [signOut, { client }] = useMutation(SIGN_OUT);\r\n\r\n  const handleSignOut = async () => {\r\n    await signOut();\r\n    setAccessToken('');\r\n    await client.resetStore();\r\n\r\n    window.location.href = routes.SIGN_IN;\r\n  };\r\n\r\n  return (\r\n    <AppBar {...rest} className={clsx(classes.root, className)}>\r\n      <Toolbar>\r\n        <RouterLink className={classes.boxLogo} to=\"/\">\r\n          <img\r\n            className={classes.logo}\r\n            alt=\"Logo\"\r\n            src=\"/images/logos/logo.svg\"\r\n          />\r\n          <Typography className={classes.brandName} variant=\"h5\">\r\n            Hệ thống quản lý thiết bị\r\n          </Typography>\r\n        </RouterLink>\r\n        <div className={classes.flexGrow} />\r\n        <Hidden mdDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.signOutButton}\r\n            color=\"inherit\"\r\n            onClick={handleSignOut}>\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton color=\"inherit\" onClick={onSidebarOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopbar.propTypes = {\r\n  className: PropTypes.string,\r\n  onSidebarOpen: PropTypes.func\r\n};\r\n\r\nexport default Topbar;\r\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { useMediaQuery } from '@material-ui/core';\n\nimport { Sidebar, Topbar, Footer } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: 56,\n    height: '100%',\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: 64\n    }\n  },\n  shiftContent: {\n    paddingLeft: 240\n  },\n  content: {\n    height: '100%'\n  }\n}));\n\nconst Main = props => {\n  const { children } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n    defaultMatches: true\n  });\n\n  const [openSidebar, setOpenSidebar] = useState(false);\n\n  const handleSidebarOpen = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleSidebarClose = () => {\n    setOpenSidebar(false);\n  };\n\n  const shouldOpenSidebar = isDesktop ? true : openSidebar;\n\n  return (\n    <div\n      className={clsx({\n        [classes.root]: true,\n        [classes.shiftContent]: isDesktop\n      })}>\n      <Topbar onSidebarOpen={handleSidebarOpen} />\n      <Sidebar\n        onClose={handleSidebarClose}\n        open={shouldOpenSidebar}\n        variant={isDesktop ? 'persistent' : 'temporary'}\n      />\n      <main className={classes.content}>\n        {children}\n        <Footer />\n      </main>\n    </div>\n  );\n};\n\nMain.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Main;\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\r\n  contained: {\r\n    boxShadow:\r\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\r\n    backgroundColor: '#FFFFFF'\r\n  }\r\n};\r\n","import palette from '../palette';\r\n\r\nexport default {\r\n  root: {\r\n    color: palette.icon,\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\r\n    }\r\n  }\r\n};\r\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\r\nimport typography from '../typography';\r\n\r\nexport default {\r\n  root: {\r\n    ...typography.body1,\r\n    borderBottom: `1px solid ${palette.divider}`\r\n  }\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  }\r\n};\r\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from './overrides';\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  overrides,\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\nimport theme from 'src/theme';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    boxShadow: 'none',\r\n    background: theme.palette.gradient\r\n  },\r\n  boxLogo: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  brandName: {\r\n    color: theme.palette.white,\r\n    marginLeft: theme.spacing(2),\r\n    textTransform: 'uppercase',\r\n    fontWeight: 'bold'\r\n  },\r\n  logo: {\r\n    width: 40\r\n  }\r\n}));\r\n\r\nconst Topbar = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      color=\"primary\"\r\n      position=\"fixed\">\r\n      <Toolbar>\r\n        <RouterLink className={classes.boxLogo} to=\"/\">\r\n          <img\r\n            className={classes.logo}\r\n            alt=\"Logo\"\r\n            src=\"/images/logos/logo.svg\"\r\n          />\r\n          <Typography className={classes.brandName} variant=\"h5\">\r\n            Hệ thống quản lý thiết bị\r\n          </Typography>\r\n        </RouterLink>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Topbar;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography } from '@material-ui/core';\n\nimport { Topbar } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: 64,\n    height: '100%'\n  },\n  content: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  grid: {\n    height: '100%'\n  },\n  quoteContainer: {\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  quote: {\n    backgroundColor: theme.palette.neutral,\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundImage: 'url(/images/auth.jpg)',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n  quoteInner: {\n    textAlign: 'center',\n    flexBasis: '600px'\n  },\n  quoteText: {\n    color: theme.palette.white,\n    fontWeight: 300\n  },\n  name: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.white\n  },\n  bio: {\n    color: theme.palette.white\n  }\n}));\n\nconst Minimal = props => {\n  const { children } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Topbar />\n      <main className={classes.content}>\n        <Grid className={classes.grid} container>\n          <Grid className={classes.quoteContainer} item lg={5}>\n            <div className={classes.quote}>\n              {/* <div className={classes.quoteInner}>\n                <Typography className={classes.quoteText} variant=\"h1\">\n                  Hella narwhal Cosby sweater McSweeney's, salvia kitsch before\n                  they sold out High Life.\n                </Typography>\n                <div className={classes.person}>\n                  <Typography className={classes.name} variant=\"body1\">\n                    Takamaru Ayako\n                  </Typography>\n                  <Typography className={classes.bio} variant=\"body2\">\n                    Manager at inVision\n                  </Typography>\n                </div>\n              </div> */}\n            </div>\n          </Grid>\n          <Grid className={classes.content} item lg={7} xs={12}>\n            {children}\n          </Grid>\n        </Grid>\n      </main>\n    </div>\n  );\n};\n\nMinimal.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n\nexport default Minimal;\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst AccountDetails = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: 'Shen',\r\n    lastName: 'Zhi',\r\n    email: 'shen.zhi@devias.io',\r\n    phone: '',\r\n    state: 'Alabama',\r\n    country: 'USA'\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const states = [\r\n    {\r\n      value: 'alabama',\r\n      label: 'Alabama'\r\n    },\r\n    {\r\n      value: 'new-york',\r\n      label: 'New York'\r\n    },\r\n    {\r\n      value: 'san-francisco',\r\n      label: 'San Francisco'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                margin=\"dense\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                margin=\"dense\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                margin=\"dense\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                margin=\"dense\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select State\"\r\n                margin=\"dense\"\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                SelectProps={{ native: true }}\r\n                value={values.state}\r\n                variant=\"outlined\"\r\n              >\r\n                {states.map(option => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Country\"\r\n                margin=\"dense\"\r\n                name=\"country\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.country}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAccountDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AccountDetails;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n  LinearProgress\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  details: {\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginLeft: 'auto',\r\n    height: 110,\r\n    width: 100,\r\n    flexShrink: 0,\r\n    flexGrow: 0\r\n  },\r\n  progress: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  uploadButton: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst AccountProfile = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const user = {\r\n    name: 'Shen Zhi',\r\n    city: 'Los Angeles',\r\n    country: 'USA',\r\n    timezone: 'GTM-7',\r\n    avatar: '/images/avatars/avatar_11.png'\r\n  };\r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardContent>\r\n        <div className={classes.details}>\r\n          <div>\r\n            <Typography gutterBottom variant=\"h2\">\r\n              John Doe\r\n            </Typography>\r\n            <Typography\r\n              className={classes.locationText}\r\n              color=\"textSecondary\"\r\n              variant=\"body1\">\r\n              {user.city}, {user.country}\r\n            </Typography>\r\n            <Typography\r\n              className={classes.dateText}\r\n              color=\"textSecondary\"\r\n              variant=\"body1\">\r\n              {moment().format('hh:mm A')} ({user.timezone})\r\n            </Typography>\r\n          </div>\r\n          <Avatar className={classes.avatar} src={user.avatar} />\r\n        </div>\r\n        <div className={classes.progress}>\r\n          <Typography variant=\"body1\">Profile Completeness: 70%</Typography>\r\n          <LinearProgress value={70} variant=\"determinate\" />\r\n        </div>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Button className={classes.uploadButton} color=\"primary\" variant=\"text\">\r\n          Upload picture\r\n        </Button>\r\n        <Button variant=\"text\">Remove picture</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAccountProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AccountProfile;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { AccountProfile, AccountDetails } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={4}>\r\n        <Grid item lg={4} md={6} xl={4} xs={12}>\r\n          <AccountProfile />\r\n        </Grid>\r\n        <Grid item lg={8} md={6} xl={8} xs={12}>\r\n          <AccountDetails />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import gql from 'graphql-tag';\n\n// Used for query information of user who signed in\n// Can get back all User field - However, if you don't any field, you should not mention it\nexport const ME = gql`\n  query {\n    me {\n      id\n      email\n      role\n      phone\n      firstName\n      lastName\n      avatar\n      employeeId\n      createdAt\n    }\n  }\n`;\n\nexport const USERS = gql`\n  query Users($cursor: String, $limit: Int) {\n    users(cursor: $cursor, limit: $limit) {\n      data {\n        id\n        employeeId\n        email\n        role\n        phone\n        firstName\n        lastName\n        avatar\n        createdAt\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      totalCount\n    }\n  }\n`;\n\nexport const DEVICES = gql`\n  query Devices($cursor: String, $limit: Int) {\n    devices(cursor: $cursor, limit: $limit) {\n      data {\n        id\n        title\n        model\n        manufacturer\n        origin\n        manufacturedYear\n        startUseTime\n        startUseState\n        originalPrice\n        faculty\n        qrcode\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      totalCount\n    }\n  }\n`;\n\nexport const ACTIVE_EVENTS = gql`\n  query ActiveEvents($cursor: String, $limit: Int) {\n    activeEvents(cursor: $cursor, limit: $limit) {\n      data {\n        creator {\n          firstName\n          lastName\n          employeeId\n          email\n        }\n        device {\n          id\n          title\n          activeState\n          faculty\n        }\n        reported\n        actionType\n        createdAt\n        usedInterval\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      totalCount\n    }\n  }\n`;\n\n// Used for query information of device which has an <id> as input\n// Can get back all Device field - However, if you don't any field, you should not mention it\nexport const DEVICE_STATE = gql`\n  query Device($id: ID!) {\n    device(id: $id) {\n      currentState\n    }\n  }\n`;\n\nexport const DEVICE_AVAILABILITY = gql`\n  query Device($id: ID!) {\n    device(id: $id) {\n      id\n      availability\n    }\n  }\n`;\n\nexport const DEVICE_INFO_CONDENSE = gql`\n  query Device($id: ID!) {\n    device(id: $id) {\n      id\n      activeState\n      availability\n      model\n      manufacturer\n      title\n    }\n  }\n`;\n\nexport const DEVICE_INFO = gql`\n  query Device($id: ID!) {\n    device(id: $id) {\n      id\n      title\n      model\n      manufacturer\n      origin\n      manufacturedYear\n      startUseTime\n      startUseState\n      originalPrice\n      currentPrice\n      faculty\n      availability\n      activeState\n    }\n  }\n`;\n\nexport const ACTIVE_EVENTS_BY_USER = gql`\n  query ActiveEventsByUser($userId: ID!) {\n    activeEventsByUser(userId: $userId) {\n      data {\n        id\n        actionType\n        createdAt\n        usedInterval\n        device {\n          title\n          faculty\n        }\n      }\n    }\n  }\n`;\n\nexport const ACTIVE_EVENTS_BY_DEVICE = gql`\n  query ActiveEventsByDevice($deviceId: ID!) {\n    activeEventsByDevice(deviceId: $deviceId) {\n      data {\n        id\n        actionType\n        createdAt\n        usedInterval\n        creator {\n          firstName\n          lastName\n        }\n      }\n    }\n  }\n`;\n\nexport const LASTEST_MAINTAIN_EVENT = gql`\n  query LastestMaintainEvent($deviceId: ID!) {\n    lastestMaintainEvent(deviceId: $deviceId) {\n      id\n      finished\n      device {\n        availability\n      }\n      maintainInfo {\n        name\n        address\n        cost\n        phone\n        note\n      }\n    }\n  }\n`;\n\nexport const MAINTAIN_EVENTS_BY_DEVICE = gql`\n  query MaintainEventsByDevice($deviceId: ID!) {\n    maintainEventsByDevice(deviceId: $deviceId) {\n      data {\n        id\n        finished\n        createdAt\n        maintainInterval\n        creator {\n          email\n          lastName\n          firstName\n        }\n        maintainInfo {\n          name\n          address\n          cost\n          phone\n          note\n        }\n        receiver {\n          firstName\n          lastName\n        }\n      }\n    }\n  }\n`;\n\nexport const LIQUIDATE_EVENT_BY_DEVICE = gql`\n  query LiquidateEventByDevice($deviceId: ID!) {\n    liquidateEventByDevice(deviceId: $deviceId) {\n      data {\n        id\n        createdAt\n        creator {\n          lastName\n          firstName\n          email\n        }\n        liquidateInfo {\n          name\n          address\n          price\n          phone\n          note\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.success.main,\n    height: 64,\n    width: 64,\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n  },\n  icon: {\n    height: 32,\n    width: 32\n  }\n}));\n\nconst Users = props => {\n  const { className, userNumber, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardContent>\n        <Grid container justify=\"space-between\">\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\">\n              SỐ LƯỢNG NGƯỜI DÙNG\n            </Typography>\n            <Typography variant=\"h1\">{userNumber}</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <PeopleIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nUsers.propTypes = {\n  className: PropTypes.string,\n  userNumber: PropTypes.number\n};\n\nexport default Users;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport AssignmentIcon from '@material-ui/icons/DevicesOther';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.blue,\n    height: 64,\n    width: 64,\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n  },\n  icon: {\n    height: 32,\n    width: 32\n  }\n}));\n\nconst Devices = props => {\n  const { className, deviceNumber, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardContent>\n        <Grid container justify=\"space-between\">\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\">\n              SỐ THIẾT BỊ ĐANG HOẠT ĐỘNG\n            </Typography>\n            <Typography variant=\"h1\">{deviceNumber}</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <AssignmentIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nDevices.propTypes = {\n  className: PropTypes.string,\n  deviceNumber: PropTypes.number\n};\n\nexport default Devices;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.purple,\n    height: 64,\n    width: 64,\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n  },\n  icon: {\n    height: 32,\n    width: 32\n  }\n}));\n\nconst ActiveEvents = props => {\n  const { className, eventNumber, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardContent>\n        <Grid container justify=\"space-between\">\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\">\n              LƯỢT SỬ DỤNG CÁC THIẾT BỊ\n            </Typography>\n            <Typography variant=\"h1\">{eventNumber}</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <AssignmentIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nActiveEvents.propTypes = {\n  className: PropTypes.string,\n  eventNumber: PropTypes.number\n};\n\nexport default ActiveEvents;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport BuildIcon from '@material-ui/icons/BuildOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.orange,\n    height: 64,\n    width: 64,\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n  },\n  icon: {\n    height: 32,\n    width: 32\n  }\n}));\n\nconst Devices = props => {\n  const { className, deviceNumber, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardContent>\n        <Grid container justify=\"space-between\">\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\">\n              SỐ THIẾT BỊ ĐANG BẢO TRÌ\n            </Typography>\n            <Typography variant=\"h1\">{deviceNumber}</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <BuildIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nDevices.propTypes = {\n  className: PropTypes.string,\n  deviceNumber: PropTypes.number\n};\n\nexport default Devices;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblemOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.yellow,\n    height: 64,\n    width: 64,\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n  },\n  icon: {\n    height: 32,\n    width: 32\n  }\n}));\n\nconst ReportEvents = props => {\n  const { className, eventNumber, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardContent>\n        <Grid container justify=\"space-between\">\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\">\n              LƯỢT BÁO CÁO SAI TRẠNG THÁI\n            </Typography>\n            <Typography variant=\"h1\">{eventNumber}</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <ReportProblemIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nReportEvents.propTypes = {\n  className: PropTypes.string,\n  eventNumber: PropTypes.number\n};\n\nexport default ReportEvents;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.red,\n    height: 64,\n    width: 64,\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n  },\n  icon: {\n    height: 32,\n    width: 32\n  }\n}));\n\nconst LiquidatedDevices = props => {\n  const { className, deviceNumber, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardContent>\n        <Grid container justify=\"space-between\">\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\">\n              SỐ THIẾT BỊ ĐÃ THANH LÝ\n            </Typography>\n            <Typography variant=\"h1\">{deviceNumber}</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <AttachMoneyIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nLiquidatedDevices.propTypes = {\n  className: PropTypes.string,\n  eventNumber: PropTypes.number\n};\n\nexport default LiquidatedDevices;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst getPath = (x, y, width, height) => `M${x - width / 2},${y}\n          h${width}\n          a${width / 4},${width / 4} 0 0 1 ${width / 4},${width / 4}\n          v${height - width / 4}\n          h${-width}\n          v${-height + width / 4}\n          a${width / 4},${width / 4} 0 0 1 ${width / 4},${-width / 4}\n          z`;\n\nconst CustomizedShape = props => {\n  const { x, y, width, height } = props;\n\n  return (\n    <React.Fragment>\n      <defs>\n        <linearGradient id=\"gradient1\">\n          <stop id=\"stop1\" offset=\"0%\" stopColor=\"#2BDA8E\" stopOpacity={1} />\n          <stop id=\"stop2\" offset=\"100%\" stopColor=\"#0AC4BA\" stopOpacity={1} />\n        </linearGradient>\n        <linearGradient\n          id=\"linear\"\n          x1=\"0\"\n          x2=\"0\"\n          y1=\"0\"\n          y2=\"1\"\n          xlinkHref=\"#gradient1\"\n        />\n      </defs>\n      <path\n        d={getPath(x, y, width, height)}\n        stroke=\"none\"\n        fill=\"url(#linear)\"\n      />\n    </React.Fragment>\n  );\n};\n\nCustomizedShape.propTypes = {\n  x: PropTypes.number,\n  y: PropTypes.number,\n  width: PropTypes.number,\n  height: PropTypes.number\n};\n\nexport default CustomizedShape;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Typography } from '@material-ui/core';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer\n} from 'recharts';\nimport CustomizedShape from './CustomizedShape';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.purple,\n    height: 64,\n    width: 64,\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n  },\n  icon: {\n    height: 32,\n    width: 32\n  }\n}));\n\nconst mockDate = length => {\n  const today = new Date();\n  let result = [];\n  for (let i = length - 1; i >= 0; i--) {\n    let yes = `${today.getDate() - i}/${today.getMonth() +\n      1}/${today.getFullYear()}`;\n    result.push(yes);\n  }\n  return result;\n};\n\nlet data = [\n  {\n    uv: 4000,\n    pv: 2400,\n    amt: 2400\n  },\n  {\n    uv: 3000,\n    pv: 1398,\n    amt: 2210\n  },\n  {\n    uv: 2000,\n    pv: 9800,\n    amt: 2290\n  },\n  {\n    uv: 2780,\n    pv: 3908,\n    amt: 2000\n  },\n  {\n    uv: 1890,\n    pv: 4800,\n    amt: 2181\n  },\n  {\n    uv: 2390,\n    pv: 3800,\n    amt: 2500\n  },\n  {\n    uv: 3490,\n    pv: 4300,\n    amt: 2100\n  }\n];\n\ndata = data.map((ele, index) => ({\n  ...ele,\n  name: mockDate(data.length)[index]\n}));\n\nconst UsageChart = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardContent>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n          variant=\"body2\">\n          THỐNG KÊ TỔNG SỐ GIỜ SỬ DỤNG THIẾT BỊ\n        </Typography>\n        <ResponsiveContainer height={500}>\n          <BarChart\n            data={data}\n            maxBarSize={14}\n            margin={{\n              top: 24,\n              right: 8,\n              left: 8,\n              bottom: 24\n            }}>\n            <CartesianGrid vertical={false} strokeDasharray=\"5\" />\n            <XAxis axisLine={false} tickLine={false} dataKey=\"name\" />\n            <YAxis axisLine={false} tickLine={false} />\n            <Tooltip />\n            {/* <Legend /> */}\n            <Bar shape={<CustomizedShape />} dataKey=\"pv\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </CardContent>\n    </Card>\n  );\n};\n\nUsageChart.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UsageChart;\n","export const updateMe = me => ({ type: 'UPDATE_ME', payload: me });\r\n\r\nexport const signOut = () => ({ type: 'SIGN_OUT' });\r\n","export const updateUsers = users => ({\r\n  type: 'UPDATE_USERS',\r\n  payload: users\r\n});\r\n","export const updateDevices = devices => ({\r\n  type: 'UPDATE_DEVICES',\r\n  payload: devices\r\n});\r\n","export const updateActiveEvents = events => ({\r\n  type: 'UPDATE_ACTIVE_EVENTS',\r\n  payload: events\r\n});\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport { useQuery } from 'react-apollo';\nimport { connect } from 'react-redux';\n\nimport { USERS, DEVICES, ACTIVE_EVENTS } from 'src/utils/graphqlQueries';\nimport {\n  Users,\n  Devices,\n  ActiveEvents,\n  MaintenanceDevices,\n  ReportEvents,\n  LiquidatedDevices,\n  UsageChart\n} from './components';\nimport { LatestEventsList } from 'src/components';\nimport {\n  usersActions,\n  devicesActions,\n  activeEventsActions\n} from 'src/redux/actions';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n  const { data: usersData, loading: usersLoading } = useQuery(USERS);\n  const { data: devicesData, loading: devicesLoading } = useQuery(DEVICES);\n  const { data: activeEventsData, loading: activeEventsLoading } = useQuery(\n    ACTIVE_EVENTS\n  );\n  console.log(devicesData);\n  const loading = usersLoading || devicesLoading || activeEventsLoading;\n\n  if (loading) {\n    return null;\n  }\n\n  const reportEventsNumber =\n    activeEventsData?.activeEvents?.data.filter(event => event.reported)\n      .length || 0;\n\n  const maintainedDevicesNumber =\n    devicesData?.devices?.data.filter(\n      device => device.avaibility === 'maintaining'\n    ).length || 0;\n\n  const liquidatedDevicesNumber =\n    devicesData?.devices?.data.filter(\n      device => device.avaibility === 'liquidated'\n    ).length || 0;\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item lg={7} md={7} sm={12} xs={12}>\n          <Grid container spacing={2}>\n            <Grid item lg={4} md={4} xs={12}>\n              <Users userNumber={usersData.users.totalCount} />\n            </Grid>\n            <Grid item lg={4} md={4} xs={12}>\n              <ActiveEvents\n                eventNumber={activeEventsData?.activeEvents?.totalCount || 0}\n              />\n            </Grid>\n            <Grid item lg={4} md={4} xs={12}>\n              <ReportEvents eventNumber={reportEventsNumber} />\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={2}>\n            <Grid item lg={4} md={4} xs={12}>\n              <Devices\n                deviceNumber={\n                  devicesData?.devices?.totalCount -\n                  maintainedDevicesNumber -\n                  liquidatedDevicesNumber\n                }\n              />\n            </Grid>\n            <Grid item lg={4} md={4} xs={12}>\n              <MaintenanceDevices deviceNumber={maintainedDevicesNumber} />\n            </Grid>\n            <Grid item lg={4} md={4} xs={12}>\n              <LiquidatedDevices deviceNumber={liquidatedDevicesNumber} />\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <UsageChart />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item lg={5} md={5} sm={12} xs={12}>\n          <LatestEventsList\n            activeEvents={activeEventsData?.activeEvents?.data}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateUsers: users => {\n    dispatch(usersActions.updateUsers(users));\n  },\n  updateDevices: devices => {\n    dispatch(devicesActions.updateDevices(devices));\n  },\n  updateActiveEvents: events => {\n    dispatch(activeEventsActions.updateActiveEvents(events));\n  }\n});\n\nexport default connect(null, mapDispatchToProps)(Dashboard);\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  },\r\n  content: {\r\n    paddingTop: 150,\r\n    textAlign: 'center'\r\n  },\r\n  image: {\r\n    marginTop: 50,\r\n    display: 'inline-block',\r\n    maxWidth: '100%',\r\n    width: 560\r\n  }\r\n}));\r\n\r\nconst NotFound = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container justify=\"center\" spacing={4}>\r\n        <Grid item lg={6} xs={12}>\r\n          <div className={classes.content}>\r\n            <Typography variant=\"h1\">\r\n              404: The page you are looking for isn’t here\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              You either tried some shady route or you came here by mistake.\r\n              Whichever it is, try using the navigation\r\n            </Typography>\r\n            <img\r\n              alt=\"Under development\"\r\n              className={classes.image}\r\n              src=\"/images/undraw_page_not_found_su7k.svg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Typography,\r\n  Grid,\r\n  Divider\r\n} from '@material-ui/core';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  imageContainer: {\r\n    height: 64,\r\n    width: 64,\r\n    margin: '0 auto',\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    borderRadius: '5px',\r\n    overflow: 'hidden',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  image: {\r\n    width: '100%'\r\n  },\r\n  statsItem: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  statsIcon: {\r\n    color: theme.palette.icon,\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst ProductCard = props => {\r\n  const { className, product, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <div className={classes.imageContainer}>\r\n          <img\r\n            alt=\"Product\"\r\n            className={classes.image}\r\n            src={product.imageUrl}\r\n          />\r\n        </div>\r\n        <Typography\r\n          align=\"center\"\r\n          gutterBottom\r\n          variant=\"h4\"\r\n        >\r\n          {product.title}\r\n        </Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          variant=\"body1\"\r\n        >\r\n          {product.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n        >\r\n          <Grid\r\n            className={classes.statsItem}\r\n            item\r\n          >\r\n            <AccessTimeIcon className={classes.statsIcon} />\r\n            <Typography\r\n              display=\"inline\"\r\n              variant=\"body2\"\r\n            >\r\n              Updated 2hr ago\r\n            </Typography>\r\n          </Grid>\r\n          <Grid\r\n            className={classes.statsItem}\r\n            item\r\n          >\r\n            <GetAppIcon className={classes.statsIcon} />\r\n            <Typography\r\n              display=\"inline\"\r\n              variant=\"body2\"\r\n            >\r\n              {product.totalDownloads} Downloads\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProductCard.propTypes = {\r\n  className: PropTypes.string,\r\n  product: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProductCard;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst ProductsToolbar = props => {\n  const { className, onAddNewDevice, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Button\n        onClick={onAddNewDevice}\n        color=\"primary\"\n        variant=\"contained\"\n        startIcon={<AddIcon />}>\n        Thêm thiết bị\n      </Button>\n    </div>\n  );\n};\n\nProductsToolbar.propTypes = {\n  className: PropTypes.string,\n  onAddNewDevice: PropTypes.func\n};\n\nexport default ProductsToolbar;\n","export default (name = '') =>\n  name\n    .replace(/\\s+/, ' ')\n    .split(' ')\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase())\n    .join('');\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormDialog, AlertDialog } from 'src/components';\nimport _ from 'lodash';\nimport Image from 'material-ui-image';\nimport { localizeError } from 'src/helpers';\nimport { useMutation } from 'react-apollo';\nimport { ADD_DEVICE } from 'src/utils/graphqlMutations';\n\nconst addNewDeviceForm = [\n  { label: 'Tên thiết bị', name: 'title', type: 'text', isRequired: true },\n  { label: 'Ký hiệu thiết bị', name: 'model', type: 'text', isRequired: true },\n  {\n    label: 'Công ty sản xuất',\n    name: 'manufacturer',\n    type: 'text',\n    isRequired: true\n  },\n  {\n    label: 'Nước sản xuất',\n    name: 'origin',\n    type: 'text',\n    isRequired: true\n  },\n  {\n    label: 'Năm sản xuất',\n    name: 'manufacturedYear',\n    type: 'year',\n    isRequired: false\n  },\n  {\n    label: 'Thời điểm đưa vào sử dụng',\n    name: 'startUseTime',\n    type: 'date',\n    isRequired: false\n  },\n  {\n    label: 'Tình trạng đưa vào sử dụng',\n    name: 'startUseState',\n    type: 'select',\n    isRequired: false\n  },\n  {\n    label: 'Giá thành',\n    name: 'originalPrice',\n    type: 'number',\n    isRequired: true\n  },\n  {\n    label: 'Bộ phận',\n    name: 'faculty',\n    type: 'text',\n    isRequired: true\n  }\n];\nconst areEqual = (prevProps, nextProps) => _.isEqual(prevProps, nextProps);\n\n/* eslint-disable react/no-multi-comp */\nconst DevicesDialog = React.memo(props => {\n  const { dialogState, onCloseDialog } = props;\n  const { open, type, value } = dialogState;\n  const [addDevice, { data }] = useMutation(ADD_DEVICE);\n\n  const handleCreateNewDevice = async deviceInfo => {\n    // console.log(deviceInfo);\n    await addDevice({ variables: { deviceInput: deviceInfo } });\n    onCloseDialog();\n  };\n\n  const onDownloadQrCode = () => {\n    fetch(value).then(response => {\n      response.blob().then(blob => {\n        let url = window.URL.createObjectURL(blob);\n        let a = document.createElement('a');\n        a.href = url;\n        a.download = `${value.split('/').pop()}`;\n        a.click();\n      });\n    });\n  };\n\n  const switchDialog = dialogType => {\n    switch (dialogType) {\n      case 'addNewDeviceForm':\n        return (\n          <FormDialog\n            open={open}\n            handleContinue={handleCreateNewDevice}\n            handleCancel={onCloseDialog}\n            title={'Thêm thiết bị'}\n            continueText={'Thực hiện'}\n            cancelText={'Bỏ qua'}\n            formData={addNewDeviceForm}\n            disableBackdropClick\n            // error={localizeError(error)}\n            // isLoading={loading}\n          />\n        );\n      case 'viewQrCode':\n        return (\n          <AlertDialog\n            open={open}\n            handleCancel={onCloseDialog}\n            handleContinue={onDownloadQrCode}\n            title={'Mã QR'}\n            continueText={'Tải xuống'}\n            cancelText={'Quay lại'}\n            content={<Image src={value} />}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return switchDialog(type);\n}, areEqual);\n\nDevicesDialog.propTypes = {\n  dialogState: PropTypes.object,\n  onCloseDialog: PropTypes.func\n};\n\nexport default DevicesDialog;\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles(theme => ({\n  backIcon: {\n    marginBottom: theme.spacing(3)\n  }\n}));\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  CardContent,\n  CardActions,\n  Button\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { DynamicForm } from 'src/components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  actionButtons: {\n    justifyContent: 'space-between',\n    padding: theme.spacing(1, 2)\n  },\n  deleteDeviceButton: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText,\n    '&:hover': {\n      backgroundColor: theme.palette.error.light\n    }\n  }\n}));\n\nconst EditDevice = props => {\n  const { className, profile, ...rest } = props;\n  const classes = useStyles();\n  const formRef = useRef(null);\n\n  const editDeviceForm = [\n    {\n      label: 'Tên thiết bị',\n      name: 'title',\n      type: 'text',\n      defaultValue: profile.title\n    },\n    {\n      label: 'Ký hiệu thiết bị',\n      name: 'model',\n      type: 'text',\n      defaultValue: profile.model\n    },\n    {\n      label: 'Công ty sản xuất',\n      name: 'manufacturer',\n      type: 'text',\n      defaultValue: profile.manufacturer\n    },\n    {\n      label: 'Nước sản xuất',\n      name: 'origin',\n      type: 'text',\n      defaultValue: profile.origin\n    },\n    {\n      label: 'Năm sản xuất',\n      name: 'manufacturedYear',\n      type: 'year',\n      defaultValue: new Date(profile.manufacturedYear, 0)\n    },\n    {\n      label: 'Thời điểm đưa vào sử dụng',\n      name: 'startUseTime',\n      type: 'date',\n      defaultValue:\n        profile.startUseTime === '(Không rõ)'\n          ? null\n          : new Date(profile.startUseTime)\n    },\n    {\n      label: 'Tình trạng đưa vào sử dụng',\n      name: 'startUseState',\n      type: 'select',\n      defaultValue: profile.startUseState === 'Mới'\n    },\n    {\n      label: 'Giá thành',\n      name: 'originalPrice',\n      type: 'number',\n      defaultValue: profile.originalPrice\n    },\n    {\n      label: 'Bộ phận',\n      name: 'faculty',\n      type: 'text',\n      defaultValue: profile.faculty\n    }\n  ];\n\n  const onEditDeviceProfile = event => {\n    event.preventDefault();\n    editDeviceForm.forEach(field => {\n      if (field.type === 'year' || field.type === 'date') {\n        formRef.current[field.name] = !formRef.current[field.name]\n          ? null\n          : field.type === 'year'\n          ? new Date(formRef.current[field.name]).getFullYear()\n          : new Date(formRef.current[field.name]);\n      }\n    });\n    console.log(formRef.current);\n  };\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <form autoComplete=\"off\" onSubmit={onEditDeviceProfile}>\n        <CardHeader\n          subheader=\"Điều chỉnh thông của thiết bị\"\n          title=\"Thay đổi thông tin\">\n          something\n        </CardHeader>\n        <Divider />\n        <CardContent>\n          <DynamicForm formRef={formRef} formData={editDeviceForm} />\n        </CardContent>\n        <Divider />\n        <CardActions className={classes.actionButtons}>\n          <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n            Lưu thay đổi\n          </Button>\n          <Button variant=\"contained\" className={classes.deleteDeviceButton}>\n            Xóa thiết bị\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nEditDevice.propTypes = {\n  className: PropTypes.string,\n  profile: PropTypes.object\n};\n\nexport default EditDevice;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IconButton, Grid } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport useStyles from './deviceProfileStyles';\nimport EditDevice from '../EditDevice';\nimport { LatestEventsList } from 'src/components';\nimport { ACTIVE_EVENTS_BY_DEVICE } from 'src/utils/graphqlQueries';\nimport { useQuery } from 'react-apollo';\n\nconst DeviceProfile = props => {\n  const { onGoBack, profile } = props;\n  const classes = useStyles();\n\n  const { data: activeEvents, loading: activeEventsLoading } = useQuery(\n    ACTIVE_EVENTS_BY_DEVICE,\n    {\n      variables: { deviceId: profile.id }\n    }\n  );\n  const loading = activeEventsLoading;\n  let activeEventsData = [];\n  if (!loading) {\n    if (activeEvents && activeEvents.activeEventsByDevice) {\n      activeEventsData = activeEvents.activeEventsByDevice.data;\n    }\n  }\n\n  return (\n    <div>\n      <IconButton onClick={onGoBack} className={classes.backIcon}>\n        <ArrowBackIcon />\n      </IconButton>\n      <Grid container spacing={4}>\n        <Grid item md={5} xs={12}>\n          <EditDevice profile={profile} />\n        </Grid>\n        <Grid item md={7} xs={12}>\n          <LatestEventsList hidden=\"device\" activeEvents={activeEventsData} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nDeviceProfile.propTypes = {\n  profile: PropTypes.object,\n  onGoBack: PropTypes.func\n};\n\nexport default DeviceProfile;\n","import React, { useState, Fragment } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, IconButton, SvgIcon } from '@material-ui/core';\n\nimport { DEVICES } from 'src/utils/graphqlQueries';\nimport { useQuery } from 'react-apollo';\nimport { MaterialTable } from 'src/components';\nimport EditIcon from '@material-ui/icons/EditOutlined';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport { DevicesToolbar, DevicesDialog, DeviceProfile } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  },\n  pagination: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  },\n  action: {\n    textAlign: 'center'\n  }\n}));\n\n/* eslint-disable react/no-multi-comp, react/display-name */\nconst DeviceList = () => {\n  const classes = useStyles();\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const [dialogState, setDialogState] = useState({\n    type: '',\n    open: false,\n    value: ''\n  });\n\n  const { data, loading } = useQuery(DEVICES);\n  // console.log(data);\n  let devices = [];\n  if (!loading) {\n    devices = data?.devices?.data?.map(device => ({\n      ...device,\n      startUseState: device.startUseState ? 'Mới' : 'Cũ',\n      startUseTime: device.startUseTime\n        ? new Date(device.startUseTime).toLocaleDateString()\n        : '(Không rõ)'\n    }));\n  }\n\n  const options = {\n    viewColumns: true,\n    onRowClick: (rowData, rowMeta) =>\n      setSelectedDevice(devices[rowMeta.dataIndex])\n  };\n\n  const columns = [\n    {\n      name: 'title',\n      label: 'Tên thiết bị',\n      options: { filter: false, viewColumns: false }\n    },\n    {\n      name: 'model',\n      label: 'Ký hiệu thiết bị',\n      options: { filter: false }\n    },\n    {\n      name: 'manufacturer',\n      label: 'Công ty sản xuất',\n      options: { filter: true }\n    },\n    {\n      name: 'origin',\n      label: 'Nước sản xuất',\n      options: { filter: true }\n    },\n    {\n      name: 'manufacturedYear',\n      label: 'Năm sản xuất',\n      options: { filter: true }\n    },\n    {\n      name: 'startUseTime',\n      label: 'Thời điểm đưa vào sử dụng',\n      options: { filter: true }\n    },\n    {\n      name: 'startUseState',\n      label: 'Tình trạng đưa vào sử dụng',\n      options: { filter: true }\n    },\n    {\n      name: 'originalPrice',\n      label: 'Giá thành',\n      options: { filter: false }\n    },\n    {\n      name: 'faculty',\n      label: 'Bộ phận',\n      options: { filter: true }\n    },\n    // {\n    //   name: 'action',\n    //   label: 'Thao tác',\n    //   options: {\n    //     sort: false,\n    //     filter: false,\n    //     viewColumns: false,\n    //     setCellHeaderProps: () => ({ style: { textAlign: 'center' } }),\n    //     setCellProps: () => ({ style: { padding: 0 } }),\n    //     customBodyRender: () => (\n    //       <div className={classes.action}>\n    //         <IconButton>\n    //           <EditIcon color=\"primary\" />\n    //         </IconButton>\n    //         <IconButton>\n    //           <DeleteIcon color=\"error\" />\n    //         </IconButton>\n    //       </div>\n    //     )\n    //   }\n    // }\n    {\n      name: 'qrcode',\n      label: 'QR Code',\n      options: {\n        sort: false,\n        filter: false,\n        setCellHeaderProps: () => ({ style: { textAlign: 'center' } }),\n        setCellProps: () => ({ style: { padding: 0 } }),\n        customBodyRender: value => (\n          <div className={classes.action}>\n            <IconButton onClick={event => handleQRViewClick(event, value)}>\n              <SvgIcon color=\"primary\">\n                <path\n                  fill=\"currentColor\"\n                  d=\"M3,11H5V13H3V11M11,5H13V9H11V5M9,11H13V15H11V13H9V11M15,11H17V13H19V11H21V13H19V15H21V19H19V21H17V19H13V21H11V17H15V15H17V13H15V11M19,19V15H17V19H19M15,3H21V9H15V3M17,5V7H19V5H17M3,3H9V9H3V3M5,5V7H7V5H5M3,15H9V21H3V15M5,17V19H7V17H5Z\"\n                />\n              </SvgIcon>\n            </IconButton>\n          </div>\n        )\n      }\n    }\n  ];\n\n  const handleQRViewClick = (event, value) => {\n    event.stopPropagation();\n    setDialogState({\n      open: true,\n      type: 'viewQrCode',\n      value: value\n    });\n  };\n\n  const handleAddNewDevice = () => {\n    setDialogState(dialogState => ({\n      ...dialogState,\n      open: true,\n      type: 'addNewDeviceForm'\n    }));\n  };\n\n  const handleDialogClose = () =>\n    setDialogState(dialogState => ({\n      ...dialogState,\n      open: false,\n      value: ''\n    }));\n\n  return (\n    <div className={classes.root}>\n      {!selectedDevice ? (\n        <Fragment>\n          <DevicesDialog\n            dialogState={dialogState}\n            onCloseDialog={handleDialogClose}\n          />\n          <DevicesToolbar onAddNewDevice={handleAddNewDevice} />\n          <MaterialTable\n            title={<Typography variant=\"h4\">Danh sách thiết bị</Typography>}\n            data={devices}\n            columns={columns}\n            options={options}\n          />\n        </Fragment>\n      ) : (\n        <DeviceProfile\n          profile={selectedDevice}\n          onGoBack={() => setSelectedDevice(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default DeviceList;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Button,\n  TextField\n} from '@material-ui/core';\nimport { DynamicForm } from 'src/components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  actionButtons: {\n    justifyContent: 'space-between',\n    padding: theme.spacing(1, 2)\n  }\n}));\n\nconst Password = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const formRef = useRef(null);\n\n  const onChangePassword = event => {\n    event.preventDefault();\n    console.log(formRef.current);\n  };\n\n  const changePasswordForm = [\n    {\n      label: 'Mật khẩu cũ',\n      name: 'oldPassword',\n      type: 'password',\n      isRequired: true\n    },\n    {\n      label: 'Mật khẩu mới',\n      name: 'password',\n      type: 'password',\n      isRequired: true\n    },\n    {\n      label: 'Xác nhận mật khẩu mới',\n      name: 'confirmPassword',\n      type: 'password',\n      isRequired: true\n    }\n  ];\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <form autoComplete=\"off\" onSubmit={onChangePassword}>\n        <CardHeader subheader=\"Thay đổi mật khẩu\" title=\"Mật khẩu\" />\n        <Divider />\n        <CardContent>\n          <DynamicForm formRef={formRef} formData={changePasswordForm} />\n        </CardContent>\n        <Divider />\n        <CardActions className={classes.actionButtons}>\n          <Button color=\"primary\" variant=\"contained\">\n            Thay đổi\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Password;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  Divider,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Notifications = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <form>\n        <CardHeader\n          subheader=\"Manage the notifications\"\n          title=\"Notifications\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={6} wrap=\"wrap\">\n            <Grid className={classes.item} item md={4} sm={6} xs={12}>\n              <Typography gutterBottom variant=\"h5\">\n                Notifications\n              </Typography>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" />}\n                label=\"Text Messages\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Phone calls\"\n              />\n            </Grid>\n            <Grid className={classes.item} item md={4} sm={6} xs={12}>\n              <Typography gutterBottom variant=\"h5\">\n                Messages\n              </Typography>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Phone calls\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button color=\"primary\" variant=\"outlined\">\n            Save\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  // CardContent,\n  CardActions,\n  Divider,\n  // TextField,\n  Button\n} from '@material-ui/core';\nimport { useMutation } from 'react-apollo';\nimport { connect } from 'react-redux';\nimport { SIGN_OUT } from 'src/utils/graphqlMutations';\nimport * as routes from 'src/common/routes';\nimport { meActions } from 'src/redux/actions';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  actionButtons: {\n    justifyContent: 'space-between',\n    padding: theme.spacing(1, 2)\n  },\n  signOutButton: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText,\n    '&:hover': {\n      backgroundColor: theme.palette.error.light\n    }\n  }\n}));\n\nconst Account = ({ className, history, reduxSignOut, ...rest }) => {\n  const classes = useStyles();\n\n  // const [values, setValues] = useState({\n  //   password: '',\n  //   confirm: ''\n  // });\n\n  // const handleChange = event => {\n  //   setValues({\n  //     ...values,\n  //     [event.target.name]: event.target.value\n  //   });\n  // };\n\n  const [signOut, { client }] = useMutation(SIGN_OUT);\n\n  const handleSignOut = async () => {\n    await signOut();\n    reduxSignOut();\n    await client.resetStore();\n\n    history.push(routes.SIGN_IN);\n  };\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <form>\n        <CardHeader title=\"Tài khoản\" subheader=\"Quản lý tài khoản\" />\n        <Divider />\n        {/* <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            name=\"confirm\"\n            onChange={handleChange}\n            style={{ marginTop: '1rem' }}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider /> */}\n        <CardActions className={classes.actionButtons}>\n          <Button\n            className={classes.signOutButton}\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={handleSignOut}>\n            Đăng xuất\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nAccount.propTypes = {\n  className: PropTypes.string,\n  history: PropTypes.object,\n  reduxSignOut: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => ({\n  reduxSignOut: () => {\n    dispatch(meActions.signOut());\n  }\n});\n\nexport default connect(null, mapDispatchToProps)(Account);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Avatar,\n  LinearProgress,\n  Divider,\n  Button,\n  CardActions\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { getInitials } from 'src/helpers';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  bioInfo: {\n    width: '75%',\n    minHeight: 100,\n    padding: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.dark,\n    backgroundPosition: '50% 50%',\n    height: 'auto',\n    width: 100\n  },\n  progress: {\n    margin: theme.spacing(2, 1, 0)\n  },\n  uploadButton: {\n    marginRight: theme.spacing(2)\n  },\n  actionButtons: {\n    justifyContent: 'space-around'\n  },\n  deleteAvatarButton: {\n    color: theme.palette.error.main\n  }\n}));\n\nconst UserBio = props => {\n  const classes = useStyles();\n  const { className, profile, ...rest } = props;\n  const user = {\n    name: profile.name,\n    employeeId: profile.employeeId,\n    email: profile.email,\n    role: profile.role,\n    createdAt: profile.createdAt,\n    phone: profile.phone,\n    avatar: profile.avatar\n  };\n  const profileArray = Object.values(user);\n  const finishRate = Math.ceil(\n    (profileArray.reduce((accum, field) => accum + (field !== null), 0) /\n      profileArray.length) *\n      100\n  );\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardContent>\n        <div className={classes.details}>\n          <div className={classes.bioInfo}>\n            <Typography noWrap gutterBottom variant=\"h2\">\n              {user.name}\n            </Typography>\n            <Typography noWrap color=\"textSecondary\" variant=\"body2\">\n              MSNV: {user.employeeId}\n            </Typography>\n            <Typography noWrap color=\"textSecondary\" variant=\"body1\">\n              Email: {user.email}\n            </Typography>\n            <Typography noWrap color=\"textSecondary\" variant=\"body2\">\n              Vai trò: {user.role}\n            </Typography>\n            {profile.phone && (\n              <Typography noWrap color=\"textSecondary\" variant=\"body2\">\n                Số điện thoại: {user.phone}\n              </Typography>\n            )}\n            <Typography noWrap color=\"textSecondary\" variant=\"body2\">\n              Ngày tạo: {user.createdAt}\n            </Typography>\n          </div>\n          <Avatar\n            variant=\"rounded\"\n            className={classes.avatar}\n            src={user.avatar}>\n            {getInitials(user.name)}\n          </Avatar>\n        </div>\n        <div className={classes.progress}>\n          <Typography variant=\"body1\">Mức độ đầy đủ: {finishRate}%</Typography>\n          <LinearProgress value={finishRate} variant=\"determinate\" />\n        </div>\n      </CardContent>\n      <Divider />\n      <CardActions className={classes.actionButtons}>\n        <Button className={classes.uploadButton} color=\"primary\" variant=\"text\">\n          Thay ảnh đại diện\n        </Button>\n        <Button variant=\"text\" className={classes.deleteAvatarButton}>\n          Xóa ảnh đại diện\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nUserBio.propTypes = {\n  className: PropTypes.string,\n  profile: PropTypes.object\n};\n\nexport default UserBio;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  CardContent,\n  CardActions,\n  Button\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { DynamicForm } from 'src/components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  actionButtons: {\n    justifyContent: 'space-between',\n    padding: theme.spacing(1, 2)\n  },\n  deleteUserButton: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText,\n    '&:hover': {\n      backgroundColor: theme.palette.error.light\n    }\n  }\n}));\n\nconst EditInfo = props => {\n  const { className, profile, ...rest } = props;\n  const classes = useStyles();\n  const formRef = useRef(null);\n  const editUserForm = [\n    {\n      label: 'Mã số nhân viên',\n      name: 'employeeId',\n      type: 'text',\n      defaultValue: profile.employeeId\n    },\n    {\n      label: 'Tên',\n      name: 'firstName',\n      type: 'text',\n      defaultValue: profile.firstName\n    },\n    {\n      label: 'Họ và Tên lót',\n      name: 'lastName',\n      type: 'text',\n      defaultValue: profile.lastName\n    },\n    {\n      label: 'Số điện thoại',\n      name: 'phone',\n      type: 'number',\n      defaultValue: profile.phone\n    }\n  ];\n\n  const onEditUserProfile = event => {\n    event.preventDefault();\n    console.log(formRef.current);\n  };\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <form autoComplete=\"off\" onSubmit={onEditUserProfile}>\n        <CardHeader\n          subheader=\"Điều chỉnh thông của người dùng\"\n          title=\"Thay đổi thông tin\">\n          something\n        </CardHeader>\n        <Divider />\n        <CardContent>\n          <DynamicForm formRef={formRef} formData={editUserForm} />\n        </CardContent>\n        <Divider />\n        <CardActions className={classes.actionButtons}>\n          <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n            Lưu thay đổi\n          </Button>\n          <Button variant=\"contained\" className={classes.deleteUserButton}>\n            Xóa tài khoản\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nEditInfo.propTypes = {\n  className: PropTypes.string,\n  profile: PropTypes.object\n};\n\nexport default EditInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport { useQuery } from 'react-apollo';\nimport { ME } from 'src/utils/graphqlQueries';\n\nimport { Notifications, Password, Account } from './components';\nimport UserBio from '../UserList/components/UserBio';\nimport EditInfo from '../UserList/components/EditInfo';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Settings = props => {\n  const classes = useStyles();\n  const { history } = props;\n  const { data, loading } = useQuery(ME);\n  let profile = {};\n\n  if (!loading) {\n    profile = {\n      ...data.me,\n      name: `${data.me.lastName} ${data.me.firstName}`,\n      createdAt: new Date(data.me.createdAt).toLocaleDateString()\n    };\n  }\n\n  if (loading) return null;\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={4}>\n        {/* <Grid item md={7} xs={12}>\n          <Notifications />\n        </Grid> */}\n        <Grid container item md={6} xs={12} spacing={4}>\n          <Grid item xs={12}>\n            <UserBio profile={profile} />\n          </Grid>\n          <Grid item xs={12}>\n            <Password />\n          </Grid>\n        </Grid>\n        <Grid container item md={6} xs={12} spacing={4}>\n          <Grid item xs={12}>\n            <EditInfo profile={profile} />\n          </Grid>\n          <Grid item xs={12}>\n            <Account history={history} />\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nSettings.propTypes = {\n  history: PropTypes.object\n};\n\nexport default Settings;\n","import { makeStyles } from '@material-ui/styles';\r\n\r\nexport default makeStyles(theme => ({\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  socialButtons: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  socialIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  sugestion: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  signInButton: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  wrapper: {\r\n    position: 'relative'\r\n  },\r\n  buttonProgress: {\r\n    color: theme.palette.neutral,\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12\r\n  },\r\n  sameLine: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n  }\r\n}));\r\n","// export const URL = 'http://171.244.143.79:8000';\nexport const URL = 'https://hospital-management-2022.herokuapp.com';\n","import { URL } from 'src/common/config';\nimport { ME } from 'src/utils/graphqlQueries';\n// import cacheImage from 'src/utils/cacheImage';\n\nexport default async accessToken => {\n  try {\n    const data = await fetch(`${URL}/graphql`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: ME.loc.source.body\n      })\n    });\n    const {\n      data: { me }\n    } = await data.json();\n    // if (me.avatar) {\n    //   me.avatar = await cacheImage(me.avatar);\n    // }\n    return me;\n  } catch (err) {\n    console.log(err);\n    throw new Error(err);\n  }\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport validate from 'src/utils/validateOverride';\nimport { meActions } from 'src/redux/actions';\nimport { useMutation } from 'react-apollo';\nimport useStyles from './signInStyles';\n\nimport {\n  Button,\n  TextField,\n  Link,\n  Typography,\n  CircularProgress\n} from '@material-ui/core';\n\nimport { SIGN_IN } from 'src/utils/graphqlMutations';\nimport * as routes from 'src/common/routes';\nimport meQuery from 'src/utils/meQuery';\nimport { DynamicForm } from 'src/components';\n\nconst SignIn = props => {\n  const { history, updateMe } = props;\n\n  const classes = useStyles();\n\n  const [signIn, { data, loading }] = useMutation(SIGN_IN);\n\n  const signInForm = [\n    {\n      label: 'Email',\n      name: 'email',\n      type: 'email',\n      isRequired: true\n    },\n    {\n      label: 'Mật khẩu',\n      name: 'password',\n      type: 'password',\n      isRequired: true\n    }\n  ];\n  const [formIsValid, setFormIsValid] = useState(false);\n  const formRef = useRef(null);\n\n  const handleSignIn = async event => {\n    event.preventDefault();\n    await signIn({ variables: { ...formRef.current } });\n  };\n\n  if (data && data.signIn) {\n    meQuery(data.signIn.accessToken).then(me => {\n      me.accessToken = data.signIn.accessToken;\n      updateMe(me);\n      history.push(routes.DASHBOARD);\n    });\n  }\n\n  return (\n    <div className={classes.content}>\n      <div className={classes.contentBody}>\n        <form className={classes.form} onSubmit={handleSignIn}>\n          <Typography className={classes.title} variant=\"h2\">\n            Đăng nhập\n          </Typography>\n          <DynamicForm\n            formData={signInForm}\n            formRef={formRef}\n            autoFocus\n            onFormIsValid={setFormIsValid}\n          />\n\n          <div className={classes.wrapper}>\n            <Button\n              className={classes.signInButton}\n              color=\"primary\"\n              disabled={!formIsValid}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\">\n              Đăng nhập\n            </Button>\n            {loading && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n          </div>\n          <div className={classes.sameLine}>\n            <Typography color=\"textSecondary\" variant=\"body1\">\n              <Link\n                component={RouterLink}\n                to={routes.FORGOT_PASSWORD}\n                variant=\"h5\">\n                Quên mật khẩu?\n              </Link>\n            </Typography>\n            <Typography color=\"textSecondary\" variant=\"body1\">\n              {'Chưa có tài khoản? '}\n              <Link component={RouterLink} to={routes.SIGN_UP} variant=\"h5\">\n                Đăng ký\n              </Link>\n            </Typography>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nSignIn.propTypes = {\n  history: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateMe: me => {\n    dispatch(meActions.updateMe(me));\n  }\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(SignIn));\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles(theme => ({\n  content: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  contentHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: theme.spacing(5),\n    paddingBototm: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: 0\n    }\n  },\n  contentBody: {\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.down('md')]: {\n      justifyContent: 'center'\n    }\n  },\n  form: {\n    paddingLeft: 100,\n    paddingRight: 100,\n    paddingBottom: 125,\n    flexBasis: 700,\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }\n  },\n  title: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    marginTop: theme.spacing(2)\n  },\n  policy: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  policyCheckbox: {\n    marginLeft: '-14px'\n  },\n  signUpButton: {\n    margin: theme.spacing(2, 0)\n  }\n}));\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  IconButton,\n  Link,\n  FormHelperText,\n  Checkbox,\n  Typography\n} from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport useStyles from './signUpStyles';\nimport * as routes from 'src/common/routes';\nimport { useMutation } from 'react-apollo';\nimport { SIGN_UP } from 'src/utils/graphqlMutations';\nimport { DynamicForm } from 'src/components';\n\nconst SignUp = props => {\n  const { history } = props;\n\n  const classes = useStyles();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [checkBoxState, setCheckBoxState] = useState({\n    checked: false,\n    touched: false\n  });\n  const formRef = useRef(null);\n\n  const [signUp] = useMutation(SIGN_UP);\n\n  const signUpForm = [\n    {\n      label: 'Email',\n      name: 'email',\n      type: 'email',\n      isRequired: true\n    },\n    {\n      label: 'Mật khẩu',\n      name: 'password',\n      type: 'password',\n      isRequired: true\n    },\n    {\n      label: 'Xác nhận mật khẩu',\n      name: 'confirmPassword',\n      type: 'password',\n      isRequired: true\n    },\n    {\n      label: 'Mã số nhân viên',\n      name: 'employeeId',\n      type: 'text',\n      isRequired: true\n    },\n    {\n      label: 'Họ và Tên lót',\n      name: 'lastName',\n      type: 'text',\n      isRequired: true\n    },\n    {\n      label: 'Tên',\n      name: 'firstName',\n      type: 'text',\n      isRequired: true\n    },\n    {\n      label: 'Số điện thoại',\n      name: 'phone',\n      type: 'number'\n    }\n  ];\n\n  const handleBack = () => {\n    history.push(routes.SIGN_IN);\n  };\n\n  const handleSignUp = async event => {\n    event.preventDefault();\n    // const { email, password } = formState.values;\n    // await signUp({ variables: { email, password } });\n    history.push(routes.HOME);\n  };\n\n  return (\n    <div className={classes.content}>\n      <div className={classes.contentHeader}>\n        <IconButton onClick={handleBack}>\n          <ArrowBackIcon />\n        </IconButton>\n      </div>\n      <div className={classes.contentBody}>\n        <form className={classes.form} onSubmit={handleSignUp}>\n          <Typography className={classes.title} variant=\"h2\">\n            Tạo tài khoản mới\n          </Typography>\n          <Typography color=\"textSecondary\" gutterBottom>\n            Sử dụng địa chỉ email của bạn để tạo tài khoản mới\n          </Typography>\n          <DynamicForm\n            autoFocus\n            formRef={formRef}\n            formData={signUpForm}\n            onFormIsValid={setFormIsValid}\n          />\n          <div className={classes.policy}>\n            <Checkbox\n              checked={checkBoxState.checked || false}\n              className={classes.policyCheckbox}\n              color=\"primary\"\n              name=\"policy\"\n              onChange={() =>\n                setCheckBoxState({\n                  touched: true,\n                  checked: !checkBoxState.checked\n                })\n              }\n            />\n            <Typography\n              className={classes.policyText}\n              color=\"textSecondary\"\n              variant=\"body1\">\n              Tôi đã đọc{' '}\n              <Link\n                color=\"primary\"\n                component={RouterLink}\n                to={routes.POLICY}\n                underline=\"always\"\n                variant=\"h5\">\n                Điều khoản dịch vụ\n              </Link>\n            </Typography>\n          </div>\n          {checkBoxState.touched && !checkBoxState.checked && (\n            <FormHelperText error>\n              Phải xác nhận điều khoản dịch vụ\n            </FormHelperText>\n          )}\n          <Button\n            className={classes.signUpButton}\n            color=\"primary\"\n            disabled={!formIsValid || !checkBoxState.checked}\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\">\n            Đăng ký\n          </Button>\n          <Typography color=\"textSecondary\" variant=\"body1\">\n            Đã có tài khoản?{' '}\n            <Link component={RouterLink} to=\"/sign-in\" variant=\"h5\">\n              Đăng nhập\n            </Link>\n          </Typography>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nSignUp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(SignUp);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst UsersToolbar = props => {\n  const { className, onAddNewUser, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Button\n        onClick={onAddNewUser}\n        color=\"primary\"\n        variant=\"contained\"\n        startIcon={<AddIcon />}>\n        Thêm người dùng\n      </Button>\n    </div>\n  );\n};\n\nUsersToolbar.propTypes = {\n  className: PropTypes.string,\n  onAddNewUser: PropTypes.func\n};\n\nexport default UsersToolbar;\n","import React, { Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography as MuiTypography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst variants = {\r\n  h1: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h2: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h3: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h4: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h5: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h6: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  subtitle1: 'Leo varius justo aptent arcu urna felis pede nisl',\r\n  subtitle2: 'Leo varius justo aptent arcu urna felis pede nisl',\r\n  body1:\r\n    'Justo proin curabitur dictumst semper auctor, consequat tempor, nostra aenean neque turpis nunc. Leo. Sapien aliquet facilisi turpis, elit facilisi praesent porta metus leo. Dignissim amet dis nec ac integer inceptos erat dis Turpis sodales ad torquent. Dolor, erat convallis.Laoreet velit a fames commodo tristique hendrerit sociosqu rhoncus vel sapien penatibus facilisis faucibus ad. Mus purus vehicula imperdiet tempor lectus, feugiat Sapien erat viverra netus potenti mattis purus turpis. Interdum curabitur potenti tristique. Porta velit dignissim tristique ultrices primis.',\r\n  body2:\r\n    'Justo proin curabitur dictumst semper auctor, consequat tempor, nostra aenean neque turpis nunc. Leo. Sapien aliquet facilisi turpis, elit facilisi praesent porta metus leo. Dignissim amet dis nec ac integer inceptos erat dis Turpis sodales ad torquent. Dolor, erat convallis.',\r\n  caption: 'Accumsan leo pretium conubia ullamcorper.',\r\n  overline: 'Accumsan leo pretium conubia ullamcorper.',\r\n  button: 'Vivamus ultrices rutrum fames dictumst'\r\n};\r\n\r\nconst Typography = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        {Object.keys(variants).map((key, i) => (\r\n          <Fragment key={i}>\r\n            <Grid\r\n              item\r\n              sm={3}\r\n              xs={12}\r\n            >\r\n              <MuiTypography variant=\"caption\">{key}</MuiTypography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              sm={9}\r\n              xs={12}\r\n            >\r\n              <MuiTypography variant={key}>{variants[key]}</MuiTypography>\r\n            </Grid>\r\n          </Fragment>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Typography;\r\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination\n} from '@material-ui/core';\n\nimport { getInitials } from 'src/helpers';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst UsersTable = props => {\n  const { className, users, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleSelectAll = event => {\n    const { users } = props;\n\n    let selectedUsers;\n\n    if (event.target.checked) {\n      selectedUsers = users.map(user => user.id);\n    } else {\n      selectedUsers = [];\n    }\n\n    setSelectedUsers(selectedUsers);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedUsers.indexOf(id);\n    let newSelectedUsers = [];\n\n    if (selectedIndex === -1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\n    } else if (selectedIndex === 0) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\n    } else if (selectedIndex === selectedUsers.length - 1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedUsers = newSelectedUsers.concat(\n        selectedUsers.slice(0, selectedIndex),\n        selectedUsers.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedUsers(newSelectedUsers);\n  };\n\n  const handlePageChange = (event, page) => {\n    setPage(page);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedUsers.length === users.length}\n                      color=\"primary\"\n                      indeterminate={\n                        selectedUsers.length > 0 &&\n                        selectedUsers.length < users.length\n                      }\n                      onChange={handleSelectAll}\n                    />\n                  </TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Email</TableCell>\n                  <TableCell>Location</TableCell>\n                  <TableCell>Phone</TableCell>\n                  <TableCell>Registration date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users.slice(0, rowsPerPage).map(user => (\n                  <TableRow\n                    className={classes.tableRow}\n                    hover\n                    key={user.id}\n                    selected={selectedUsers.indexOf(user.id) !== -1}>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={selectedUsers.indexOf(user.id) !== -1}\n                        color=\"primary\"\n                        onChange={event => handleSelectOne(event, user.id)}\n                        value=\"true\"\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <div className={classes.nameContainer}>\n                        <Avatar className={classes.avatar} src={user.avatarUrl}>\n                          {getInitials(user.name)}\n                        </Avatar>\n                        <Typography variant=\"body1\">{user.name}</Typography>\n                      </div>\n                    </TableCell>\n                    <TableCell>{user.email}</TableCell>\n                    <TableCell>\n                      {user.address.city}, {user.address.state},{' '}\n                      {user.address.country}\n                    </TableCell>\n                    <TableCell>{user.phone}</TableCell>\n                    <TableCell>\n                      {moment(user.createdAt).format('DD/MM/YYYY')}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <TablePagination\n          component=\"div\"\n          count={users.length}\n          onChangePage={handlePageChange}\n          onChangeRowsPerPage={handleRowsPerPageChange}\n          page={page}\n          rowsPerPage={rowsPerPage}\n          rowsPerPageOptions={[5, 10, 25]}\n        />\n      </CardActions>\n    </Card>\n  );\n};\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\n\nexport default UsersTable;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from 'react-apollo';\nimport { FormDialog } from 'src/components';\nimport { SIGN_UP } from 'src/utils/graphqlMutations';\nimport { localizeError } from 'src/helpers';\n\nconst addNewUserForm = [\n  { label: 'Email', name: 'email', type: 'email', isRequired: true },\n  { label: 'Mật khẩu', name: 'password', type: 'password', isRequired: true },\n  {\n    label: 'Xác nhận mật khẩu',\n    name: 'confirmPassword',\n    type: 'password',\n    isRequired: true\n  },\n  {\n    label: 'Mã số nhân viên',\n    name: 'employeeId',\n    type: 'text',\n    isRequired: true\n  },\n  { label: 'Tên', name: 'firstName', type: 'text', isRequired: true },\n  { label: 'Họ và Tên lót', name: 'lastName', type: 'text', isRequired: true },\n  { label: 'Số điện thoại', name: 'phone', type: 'number', isRequired: true }\n];\n\n/*eslint-disable react/no-multi-comp */\nconst UsersDialog = props => {\n  const { open, dialogType, onCloseDialog } = props;\n  const [signUp, { loading, error }] = useMutation(SIGN_UP);\n\n  const handleCreateNewUser = async userInfo => {\n    console.log(userInfo);\n    // await signUp({ variables: userInfo });\n  };\n\n  const switchDialog = dialogType => {\n    switch (dialogType) {\n      case 'addNewUserForm':\n        return (\n          <FormDialog\n            open={open}\n            handleContinue={handleCreateNewUser}\n            handleCancel={onCloseDialog}\n            title={'Thêm người dùng'}\n            formData={addNewUserForm}\n            error={localizeError(error)}\n            isLoading={loading}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return switchDialog(dialogType);\n};\n\nUsersDialog.propTypes = {\n  open: PropTypes.bool,\n  dialogType: PropTypes.string,\n  onCloseDialog: PropTypes.func\n};\n\nexport default UsersDialog;\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles(theme => ({\n  backIcon: {\n    marginBottom: theme.spacing(3)\n  }\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IconButton, Grid } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport useStyles from './userProfileStyles';\nimport UserBio from '../UserBio';\nimport EditInfo from '../EditInfo';\nimport { LatestEventsList } from 'src/components';\nimport { ACTIVE_EVENTS_BY_USER } from 'src/utils/graphqlQueries';\nimport { useQuery } from 'react-apollo';\n\nconst UserProfile = props => {\n  const { onGoBack, profile } = props;\n  const classes = useStyles();\n\n  const { data: activeEvents, loading: activeEventsLoading } = useQuery(\n    ACTIVE_EVENTS_BY_USER,\n    {\n      variables: { userId: profile.id }\n    }\n  );\n  const loading = activeEventsLoading;\n  let activeEventsData = [];\n  if (!loading) {\n    if (activeEvents && activeEvents.activeEventsByUser) {\n      activeEventsData = activeEvents.activeEventsByUser.data;\n    }\n  }\n\n  return (\n    <div>\n      <IconButton onClick={onGoBack} className={classes.backIcon}>\n        <ArrowBackIcon />\n      </IconButton>\n      <Grid container spacing={4}>\n        <Grid item container md={5} xs={12} spacing={4}>\n          <Grid item xs={12}>\n            <UserBio profile={profile} />\n          </Grid>\n          <Grid item xs={12}>\n            <EditInfo profile={profile} />\n          </Grid>\n        </Grid>\n        <Grid item md={7} xs={12}>\n          <LatestEventsList hidden=\"creator\" activeEvents={activeEventsData} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nUserProfile.propTypes = {\n  profile: PropTypes.object,\n  onGoBack: PropTypes.func\n};\n\nexport default UserProfile;\n","import React, { useState, Fragment } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { useQuery } from 'react-apollo';\n// import { UsersToolbar, UsersTable } from './components';\n// import mockData from './data';\nimport { USERS } from 'src/utils/graphqlQueries';\n// import { useSelector } from 'react-redux';\nimport { IconButton, Typography, Avatar } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/EditOutlined';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport { MaterialTable, FormDialog } from 'src/components';\nimport { UsersToolbar, UsersDialog, UserProfile } from './components';\nimport { getInitials } from 'src/helpers';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  },\n  action: {\n    textAlign: 'center'\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n    backgroundColor: theme.palette.primary.dark\n  }\n}));\n\n/* eslint-disable react/no-multi-comp, react/display-name */\nconst UserList = () => {\n  const classes = useStyles();\n  const [dialogType, setDialogType] = useState(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  const { data, loading } = useQuery(USERS);\n  let users = [];\n  if (!loading) {\n    users = data.users.data.map(user => ({\n      ...user,\n      name: `${user.lastName} ${user.firstName}`,\n      createdAt: new Date(user.createdAt).toLocaleDateString()\n    }));\n  }\n\n  const options = {\n    onRowClick: (_, rowMeta) => setSelectedUser(users[rowMeta.dataIndex])\n  };\n\n  const columns = [\n    {\n      name: 'name',\n      label: 'Họ và Tên',\n      options: {\n        filter: false,\n        setCellProps: () => ({ style: { paddingTop: 0, paddingBottom: 0 } }),\n        customBodyRender: (value, { rowIndex }) => (\n          <div className={classes.nameContainer}>\n            <Avatar className={classes.avatar} src={users[rowIndex].avatar}>\n              {getInitials(value)}\n            </Avatar>\n            <Typography variant=\"body1\">{value}</Typography>\n          </div>\n        )\n      }\n    },\n    {\n      name: 'employeeId',\n      label: 'Mã số nhân viên',\n      options: { filter: false }\n    },\n    {\n      name: 'role',\n      label: 'Vai trò',\n      options: { filter: true }\n    },\n    {\n      name: 'phone',\n      label: 'Số điện thoại',\n      options: { filter: false }\n    },\n    {\n      name: 'email',\n      label: 'Email',\n      options: { filter: false }\n    },\n    {\n      name: 'createdAt',\n      label: 'Ngày tạo tài khoản',\n      options: { filter: false }\n    }\n    // {\n    //   name: 'action',\n    //   label: 'Thao tác',\n    //   options: {\n    //     sort: false,\n    //     filter: false,\n    //     setCellHeaderProps: () => ({ style: { textAlign: 'center' } }),\n    //     setCellProps: () => ({ style: { padding: 0 } }),\n    //     customBodyRender: () => (\n    //       <div className={classes.action}>\n    //         <IconButton>\n    //           <EditIcon color=\"primary\" />\n    //         </IconButton>\n    //         <IconButton>\n    //           <DeleteIcon color=\"error\" />\n    //         </IconButton>\n    //       </div>\n    //     )\n    //   }\n    // }\n  ];\n\n  const handleAddNewUser = () => {\n    setDialogType('addNewUserForm');\n    setOpenDialog(true);\n  };\n\n  return (\n    <div className={classes.root}>\n      {!selectedUser ? (\n        <Fragment>\n          <UsersDialog\n            open={openDialog}\n            dialogType={dialogType}\n            onCloseDialog={() => setOpenDialog(false)}\n          />\n          <UsersToolbar onAddNewUser={handleAddNewUser} />\n          <MaterialTable\n            title={<Typography variant=\"h4\">Danh sách người dùng</Typography>}\n            data={users}\n            columns={columns}\n            options={options}\n          />\n        </Fragment>\n      ) : (\n        <UserProfile\n          profile={selectedUser}\n          onGoBack={() => setSelectedUser(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UserList;\n","import { makeStyles } from '@material-ui/styles';\r\n\r\nexport default makeStyles(theme => ({\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: 0\r\n    }\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  resetPasswordButton: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  wrapper: {\r\n    position: 'relative'\r\n  },\r\n  buttonProgress: {\r\n    color: theme.palette.white,\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12\r\n  }\r\n}));\r\n","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport validate from 'src/utils/validateOverride';\nimport { useMutation } from 'react-apollo';\n\nimport {\n  Button,\n  IconButton,\n  TextField,\n  Typography,\n  CircularProgress\n} from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport { FORGOT_PASSWORD } from 'src/utils/graphqlMutations';\nimport useStyles from './forgotPasswordStyles';\nimport * as routes from 'src/common/routes';\nimport AlertDialog from 'src/components/AlertDialog';\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true,\n    length: {\n      maximum: 64\n    }\n  }\n};\n\nconst ForgotPassword = props => {\n  const { history } = props;\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  const [alertState, setAlertState] = useState({});\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const [sendForgotPasswordEmail, { loading }] = useMutation(FORGOT_PASSWORD);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleBack = () => {\n    history.push(routes.SIGN_IN);\n  };\n\n  const handleResetPassword = async event => {\n    event.preventDefault();\n    setFormState(formState => ({\n      ...formState,\n      isValid: false\n    }));\n\n    try {\n      await sendForgotPasswordEmail({ variables: formState.values });\n\n      handleOnCompleted();\n    } catch (err) {\n      console.log({ err });\n      handleOnError();\n    }\n  };\n\n  const handleOnCompleted = () => {\n    setAlertState({\n      open: true,\n      title: 'Thành công',\n      content:\n        'Một email dùng để đặt lại mật khẩu đã được gửi đến hộp thư của bạn. Vui lòng kiểm tra hộp thư và làm theo hướng dẫn!',\n      handleContinue: () => {\n        history.push(routes.HOME);\n      }\n    });\n  };\n\n  const handleOnError = () => {\n    setAlertState({\n      open: true,\n      title: 'Không thành công',\n      content:\n        'Đặt lại mật khẩu không thành công vì địa chỉ email bạn nhập vào chưa được dùng để đăng ký tài khoản',\n      handleContinue: () => {\n        history.push(routes.SIGN_UP);\n      },\n      handleCancel: () => {\n        setAlertState({ open: false });\n        setFormState(formState => ({\n          ...formState,\n          isValid: true\n        }));\n      },\n      continueText: 'Đăng ký ngay'\n    });\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <div className={classes.content}>\n      <div className={classes.contentHeader}>\n        <IconButton onClick={handleBack}>\n          <ArrowBackIcon />\n        </IconButton>\n      </div>\n      <div className={classes.contentBody}>\n        <form\n          className={classes.form}\n          onSubmit={event =>\n            handleResetPassword(event, sendForgotPasswordEmail)\n          }>\n          <Typography className={classes.title} variant=\"h2\">\n            Đặt lại mật khẩu\n          </Typography>\n          <TextField\n            className={classes.textField}\n            error={hasError('email')}\n            fullWidth\n            helperText={hasError('email') ? formState.errors.email[0] : null}\n            label=\"Email\"\n            name=\"email\"\n            onChange={handleChange}\n            type=\"text\"\n            value={formState.values.email || ''}\n            variant=\"outlined\"\n          />\n\n          <div className={classes.wrapper}>\n            <Button\n              className={classes.resetPasswordButton}\n              color=\"primary\"\n              disabled={!formState.isValid}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\">\n              Xác nhận\n            </Button>\n            {loading && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n          </div>\n        </form>\n      </div>\n      {alertState.open && <AlertDialog {...alertState} />}\n    </div>\n  );\n};\n\nForgotPassword.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(ForgotPassword);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    textAlign: 'center',\r\n    '-ms-transform': 'translateY(50%)',\r\n    transform: 'translateY(50%)'\r\n  },\r\n  image: {\r\n    marginTop: 42,\r\n    marginLeft: 42,\r\n    display: 'inline-block',\r\n    maxWidth: '100%',\r\n    width: 250,\r\n    '-webkit-filter': 'drop-shadow( 3px 3px 3px rgba(0, 0, 0, .3))',\r\n    filter: 'drop-shadow( 3px 3px 3px rgba(0, 0, 0, .3))'\r\n  },\r\n  buttonDirect: {\r\n    color: theme.palette.neutral,\r\n    marginTop: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst ConfirmNotification = props => {\r\n  const classes = useStyles();\r\n  const { confirmToken } = props.match.params;\r\n  console.log(confirmToken);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container justify=\"center\" spacing={4}>\r\n        <Grid item>\r\n          <div className={classes.content}>\r\n            <Typography variant=\"h1\">Xác nhận email thành công!</Typography>\r\n            <img\r\n              alt=\"Under development\"\r\n              className={classes.image}\r\n              src=\"/images/completed_task.svg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nConfirmNotification.propTypes = {\r\n  match: PropTypes.object\r\n};\r\n\r\nexport default ConfirmNotification;\r\n","import { makeStyles } from '@material-ui/styles';\r\n\r\nexport default makeStyles(theme => ({\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  confirmButton: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport validate from 'src/utils/validateOverride';\r\nimport { Button, TextField, Typography } from '@material-ui/core';\r\n\r\nimport useStyles from './resetPasswordStyles';\r\nimport * as routes from 'src/common/routes';\r\nimport { useMutation } from 'react-apollo';\r\nimport { RESET_PASSWORD } from 'src/utils/graphqlMutations';\r\n\r\nconst schema = {\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      minimum: 6,\r\n      maximum: 42\r\n    }\r\n  },\r\n  confirmPassword: {\r\n    equality: 'password',\r\n    presence: { allowEmpty: false, message: 'is required' }\r\n  }\r\n};\r\n\r\nconst ResetPassword = props => {\r\n  const classes = useStyles();\r\n\r\n  const { passwordToken } = props.match.params;\r\n  const { history } = props;\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  const [resetPassword] = useMutation(RESET_PASSWORD);\r\n\r\n  useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === 'checkbox'\r\n            ? event.target.checked\r\n            : event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleConfirm = async event => {\r\n    event.preventDefault();\r\n\r\n    const { password } = formState.values;\r\n    try {\r\n      await resetPassword({\r\n        variables: { newPassword: password, passwordToken }\r\n      });\r\n      history.push(routes.HOME);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const hasError = field =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <div className={classes.contentBody}>\r\n        <form className={classes.form} onSubmit={handleConfirm}>\r\n          <Typography className={classes.title} variant=\"h2\">\r\n            Reset Password\r\n          </Typography>\r\n          <Typography color=\"textSecondary\" gutterBottom>\r\n            Reset your forgotten password\r\n          </Typography>\r\n          <TextField\r\n            className={classes.textField}\r\n            error={hasError('password')}\r\n            fullWidth\r\n            helperText={\r\n              hasError('password') ? formState.errors.password[0] : null\r\n            }\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={formState.values.password || ''}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            className={classes.textField}\r\n            error={hasError('confirmPassword')}\r\n            fullWidth\r\n            helperText={\r\n              hasError('confirmPassword')\r\n                ? formState.errors.confirmPassword[0]\r\n                : null\r\n            }\r\n            label=\"Confirm Password\"\r\n            name=\"confirmPassword\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={formState.values.confirmPassword || ''}\r\n            variant=\"outlined\"\r\n          />\r\n          <Button\r\n            className={classes.confirmButton}\r\n            color=\"primary\"\r\n            disabled={!formState.isValid}\r\n            fullWidth\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            variant=\"contained\">\r\n            Confirm\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nResetPassword.propTypes = {\r\n  history: PropTypes.object,\r\n  match: PropTypes.object\r\n};\r\n\r\nexport default withRouter(ResetPassword);\r\n","import { makeStyles } from '@material-ui/core';\n\nconst backgroundImage = '/images/undraw_medicine_b1ol.svg';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.up('sm')]: {\n      height: '100vh',\n      minHeight: 500,\n      maxHeight: 2000\n    }\n  },\n  container: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(14),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  background: {\n    backgroundImage: `url(${backgroundImage})`,\n    backgroundPosition: 'center',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'contain',\n    backgroundRepeat: 'no-repeat',\n    zIndex: -2\n  },\n  backdrop: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    zIndex: -1\n  },\n  button: {\n    minWidth: 200\n  },\n  image: {\n    display: 'inline-block',\n    maxWidth: '100%',\n    width: 320\n  },\n  h5: {\n    marginBottom: theme.spacing(4),\n    marginTop: theme.spacing(4),\n    [theme.breakpoints.up('sm')]: {\n      marginTop: theme.spacing(10)\n    }\n  },\n  more: {\n    marginTop: theme.spacing(2)\n  },\n  title: {\n    color: theme.palette.primary.light,\n    marginBottom: theme.spacing(2)\n  },\n  subTitle: {\n    color: theme.palette.text.primary,\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { Container, Typography, Button } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport useStyles from './landingStyles';\nimport * as routes from 'src/common/routes';\n\nconst Landing = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Container className={classes.container}>\n        <Typography className={classes.title} align=\"center\" variant=\"h1\">\n          HỆ THỐNG QUẢN LÝ THIẾT BỊ VẬT TƯ BỆNH VIỆN\n        </Typography>\n        <Typography className={classes.subTitle} align=\"center\" variant=\"h5\">\n          Trải nghiệm một nền tảng giúp việc quản lý thiết bị vật tư trong bệnh\n          viện của bạn một cách dễ dàng hơn\n        </Typography>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          className={classes.button}\n          component={RouterLink}\n          to={routes.ADMIN}>\n          Dashboard\n        </Button>\n        {/* <Typography variant=\"body2\" color=\"inherit\" className={classes.more}>\n          Manage your hospital facilities\n        </Typography> */}\n        <div className={classes.backdrop} />\n        <div className={classes.background} />\n      </Container>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n  content: {\r\n    boxSizing: 'border-box',\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Policy = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container className={classes.container}>\r\n        <Typography color=\"inherit\" align=\"center\" variant=\"h2\">\r\n          Privacy Policy\r\n        </Typography>\r\n        <div className={classes.content}>\r\n          <p>\r\n            Industrial Automation Advisor Co., LTD. built the Hoostaf app as a\r\n            Free app. This SERVICE is provided by Industrial Automation Advisor\r\n            Co., LTD. at no cost and is intended for use as is.\r\n          </p>{' '}\r\n          <p>\r\n            This page is used to inform visitors regarding our policies with the\r\n            collection, use, and disclosure of Personal Information if anyone\r\n            decided to use our Service.\r\n          </p>{' '}\r\n          <p>\r\n            If you choose to use our Service, then you agree to the collection\r\n            and use of information in relation to this policy. The Personal\r\n            Information that we collect is used for providing and improving the\r\n            Service. We will not use or share your information with anyone\r\n            except as described in this Privacy Policy.\r\n          </p>{' '}\r\n          <p>\r\n            The terms used in this Privacy Policy have the same meanings as in\r\n            our Terms and Conditions, which is accessible at Hoostaf unless\r\n            otherwise defined in this Privacy Policy.\r\n          </p>{' '}\r\n          <p>\r\n            <strong>Information Collection and Use</strong>\r\n          </p>{' '}\r\n          <p>\r\n            For a better experience, while using our Service, we may require you\r\n            to provide us with certain personally identifiable information. The\r\n            information that we request will be retained by us and used as\r\n            described in this privacy policy.\r\n          </p>{' '}\r\n          <p>\r\n            The app does use third party services that may collect information\r\n            used to identify you.\r\n          </p>{' '}\r\n          <div>\r\n            <p>\r\n              Link to privacy policy of third party service providers used by\r\n              the app\r\n            </p>{' '}\r\n            <ul>\r\n              <li>\r\n                <a\r\n                  href=\"https://www.google.com/policies/privacy/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\">\r\n                  Google Play Services\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>{' '}\r\n          <p>\r\n            <strong>Log Data</strong>\r\n          </p>\r\n          <p>\r\n            We want to inform you that whenever you use our Service, in a case\r\n            of an error in the app we collect data and information (through\r\n            third party products) on your phone called Log Data. This Log Data\r\n            may include information such as your device Internet Protocol (“IP”)\r\n            address, device name, operating system version, the configuration of\r\n            the app when utilizing our Service, the time and date of your use of\r\n            the Service, and other statistics.\r\n          </p>{' '}\r\n          <p>\r\n            <strong>Cookies</strong>\r\n          </p>{' '}\r\n          <p>\r\n            Cookies are files with a small amount of data that are commonly used\r\n            as anonymous unique identifiers. These are sent to your browser from\r\n            the websites that you visit and are stored on your device's internal\r\n            memory.\r\n          </p>{' '}\r\n          <p>\r\n            This Service does not use these “cookies” explicitly. However, the\r\n            app may use third party code and libraries that use “cookies” to\r\n            collect information and improve their services. You have the option\r\n            to either accept or refuse these cookies and know when a cookie is\r\n            being sent to your device. If you choose to refuse our cookies, you\r\n            may not be able to use some portions of this Service.\r\n          </p>{' '}\r\n          <p>\r\n            <strong>Service Providers</strong>\r\n          </p>{' '}\r\n          <p>\r\n            We may employ third-party companies and individuals due to the\r\n            following reasons:\r\n          </p>{' '}\r\n          <ul>\r\n            <li>To facilitate our Service;</li>{' '}\r\n            <li>To provide the Service on our behalf;</li>{' '}\r\n            <li>To perform Service-related services; or</li>{' '}\r\n            <li>To assist us in analyzing how our Service is used.</li>\r\n          </ul>{' '}\r\n          <p>\r\n            We want to inform users of this Service that these third parties\r\n            have access to your Personal Information. The reason is to perform\r\n            the tasks assigned to them on our behalf. However, they are\r\n            obligated not to disclose or use the information for any other\r\n            purpose.\r\n          </p>{' '}\r\n          <p>\r\n            <strong>Security</strong>\r\n          </p>{' '}\r\n          <p>\r\n            We value your trust in providing us your Personal Information, thus\r\n            we are striving to use commercially acceptable means of protecting\r\n            it. But remember that no method of transmission over the internet,\r\n            or method of electronic storage is 100% secure and reliable, and we\r\n            cannot guarantee its absolute security.\r\n          </p>{' '}\r\n          <p>\r\n            <strong>Links to Other Sites</strong>\r\n          </p>{' '}\r\n          <p>\r\n            This Service may contain links to other sites. If you click on a\r\n            third-party link, you will be directed to that site. Note that these\r\n            external sites are not operated by us. Therefore, we strongly advise\r\n            you to review the Privacy Policy of these websites. We have no\r\n            control over and assume no responsibility for the content, privacy\r\n            policies, or practices of any third-party sites or services.\r\n          </p>{' '}\r\n          <p>\r\n            <strong>Children’s Privacy</strong>\r\n          </p>{' '}\r\n          <p>\r\n            These Services do not address anyone under the age of 13. We do not\r\n            knowingly collect personally identifiable information from children\r\n            under 13. In the case we discover that a child under 13 has provided\r\n            us with personal information, we immediately delete this from our\r\n            servers. If you are a parent or guardian and you are aware that your\r\n            child has provided us with personal information, please contact us\r\n            so that we will be able to do necessary actions.\r\n          </p>{' '}\r\n          <p>\r\n            <strong>Changes to This Privacy Policy</strong>\r\n          </p>{' '}\r\n          <p>\r\n            We may update our Privacy Policy from time to time. Thus, you are\r\n            advised to review this page periodically for any changes. We will\r\n            notify you of any changes by posting the new Privacy Policy on this\r\n            page. These changes are effective immediately after they are posted\r\n            on this page.\r\n          </p>{' '}\r\n          <p>\r\n            <strong>Contact Us</strong>\r\n          </p>{' '}\r\n          <p>\r\n            If you have any questions or suggestions about our Privacy Policy,\r\n            do not hesitate to contact us at\r\n            industrial.automation.advisor@gmail.com.\r\n          </p>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Policy;\r\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Redirect, Router, Route } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { connect } from 'react-redux';\n\nimport { RouteWithLayout } from 'src/components';\nimport { Main as MainLayout, Minimal as MinimalLayout } from 'src/layouts';\nimport * as routes from 'src/common/routes';\n\nimport {\n  Dashboard as DashboardView,\n  DeviceList as DeviceListView,\n  UserList as UserListView,\n  // Typography as TypographyView,\n  Settings as SettingsView,\n  SignUp as SignUpView,\n  SignIn as SignInView,\n  NotFound as NotFoundView,\n  ForgotPassword as ForgotPasswordView,\n  ConfirmNotification as ConfirmNotificationView,\n  ResetPassword as ResetPasswordView,\n  Landing as LandingView,\n  Policy as PolicyView\n} from 'src/views';\n\nexport const history = createBrowserHistory();\nconst { pathname } = history.location;\n\nconst Routes = ({ accessToken }) => {\n  const authRoutes = [routes.SIGN_IN, routes.SIGN_UP, routes.FORGOT_PASSWORD];\n  // console.log(pathname);\n\n  return (\n    <Router history={history}>\n      <Switch>\n        {accessToken && (\n          <Redirect exact from={routes.ADMIN} to={routes.DASHBOARD} />\n        )}\n\n        {accessToken && authRoutes.includes(pathname) && (\n          <Redirect from={pathname} to={routes.DASHBOARD} />\n        )}\n\n        {!accessToken && <Redirect from={routes.ADMIN} to={routes.SIGN_IN} />}\n\n        <Route exact component={LandingView} path={routes.HOME} />\n\n        <Route exact component={PolicyView} path={routes.POLICY} />\n\n        <RouteWithLayout\n          component={NotFoundView}\n          exact\n          layout={MinimalLayout}\n          path={routes.NOT_FOUND}\n        />\n        <RouteWithLayout\n          component={SignInView}\n          exact\n          layout={MinimalLayout}\n          path={routes.SIGN_IN}\n        />\n        <RouteWithLayout\n          component={SignUpView}\n          exact\n          layout={MinimalLayout}\n          path={routes.SIGN_UP}\n        />\n        <RouteWithLayout\n          component={ForgotPasswordView}\n          exact\n          layout={MinimalLayout}\n          path={routes.FORGOT_PASSWORD}\n        />\n        <RouteWithLayout\n          component={ConfirmNotificationView}\n          layout={MinimalLayout}\n          path={routes.CONFIRM_NOTIFICATION + '/:confirmToken'}\n        />\n        <RouteWithLayout\n          component={ResetPasswordView}\n          layout={MinimalLayout}\n          path={routes.RESET_PASSWORD + '/:passwordToken'}\n        />\n\n        <RouteWithLayout\n          component={DashboardView}\n          exact\n          layout={MainLayout}\n          path={routes.DASHBOARD}\n        />\n        <RouteWithLayout\n          component={UserListView}\n          exact\n          layout={MainLayout}\n          path={routes.USERS}\n        />\n        <RouteWithLayout\n          component={DeviceListView}\n          exact\n          layout={MainLayout}\n          path={routes.DEVICES}\n        />\n        {/* <RouteWithLayout\n          component={TypographyView}\n          exact\n          layout={MainLayout}\n          path={routes.EVENTS}\n        /> */}\n        <RouteWithLayout\n          component={SettingsView}\n          exact\n          layout={MainLayout}\n          path={routes.SETTINGS}\n        />\n        <Redirect to={routes.NOT_FOUND} />\n      </Switch>\n    </Router>\n  );\n};\n\nRoutes.propTypes = {\n  accessToken: PropTypes.string\n};\n\nconst mapStateToProps = state => state.me;\n\nexport default connect(mapStateToProps)(Routes);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport Routes from './components/Routes';\nimport { URL } from './common/config';\nimport meQuery from 'src/utils/meQuery';\nimport { meActions } from 'src/redux/actions';\nimport './App.css';\n\nconst App = ({ updateMe }) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(URL + '/refresh-token', {\n      method: 'POST',\n      credentials: 'include'\n    }).then(async data => {\n      // console.log(data);\n      const { accessToken } = await data.json();\n      // console.log(accessToken);\n      // setAccessToken(accessToken);\n      if (accessToken) {\n        const me = await meQuery(accessToken);\n        me.accessToken = accessToken;\n        updateMe(me);\n      }\n      setLoading(false);\n    });\n  });\n\n  if (loading) {\n    return null;\n  }\n\n  return <Routes />;\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateMe: me => {\n    dispatch(meActions.updateMe(me));\n  }\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","const initialState = {\r\n  email: null,\r\n  role: null,\r\n  firstName: null,\r\n  lastName: null,\r\n  phone: null,\r\n  avatar: '',\r\n  accessToken: '',\r\n  language: 'VN'\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_ME':\r\n      const newState = { ...state, ...action.payload };\r\n      if (action.payload.avatar) {\r\n        newState.avatar = { uri: action.payload.avatar };\r\n      } else {\r\n        newState.avatar = state.avatar;\r\n      }\r\n      return newState;\r\n    case 'SIGN_OUT': {\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  data: [],\r\n  totalCount: 0,\r\n  pageInfo: {\r\n    endCursor: null,\r\n    hasNextPage: true\r\n  }\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_USERS':\r\n      const newState = { ...state, ...action.payload };\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  data: [],\r\n  totalCount: 0,\r\n  pageInfo: {\r\n    endCursor: null,\r\n    hasNextPage: true\r\n  }\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_DEVICES':\r\n      const newState = { ...state, ...action.payload };\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  data: [],\r\n  totalCount: 0,\r\n  pageInfo: {\r\n    endCursor: null,\r\n    hasNextPage: true\r\n  }\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_ACTIVE_EVENTS':\r\n      const newState = { ...state, ...action.payload };\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\n// import popupReducer from './popupReducer';\r\nimport meReducer from './meReducer';\r\nimport usersReducer from './usersReducer';\r\nimport devicesReducer from './devicesReducer';\r\nimport activeEventsReducer from './activeEventsReducer';\r\n\r\nexport default combineReducers({\r\n  // popup: popupReducer,\r\n  me: meReducer,\r\n  users: usersReducer,\r\n  devices: devicesReducer,\r\n  activeEvents: activeEventsReducer\r\n});\r\n","import { createStore } from 'redux';\r\nimport rootReducers from './reducers';\r\n\r\nconst store = createStore(\r\n  rootReducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import { ApolloClient } from 'apollo-client';\nimport { ApolloLink, Observable } from 'apollo-link';\nimport { createUploadLink } from 'apollo-upload-client';\nimport { TokenRefreshLink } from 'apollo-link-token-refresh';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport jwtDecode from 'jwt-decode';\n// import { WebSocketLink } from 'apollo-link-ws';\n\nimport store from 'src/redux/store';\nimport meQuery from 'src/utils/meQuery';\nimport { meActions } from 'src/redux/actions';\nimport { URL } from 'src/common/config';\n\n// const wsLink = new WebSocketLink({\n//   uri: `${URL}/graphql`,\n//   options: {\n//     reconnect: true\n//   }\n// });\n\nconst httpLink = createUploadLink({\n  uri: `${URL}/graphql`,\n  credentials: 'include'\n});\n\nconst authLink = new ApolloLink(\n  (operation, foward) =>\n    new Observable(observer => {\n      let handle;\n      Promise.resolve(operation)\n        .then(operation => {\n          const { accessToken } = store.getState().me;\n\n          if (accessToken) {\n            operation.setContext({\n              headers: {\n                authorization: `Bearer ${accessToken}`\n              }\n            });\n          }\n        })\n        .then(() => {\n          handle = foward(operation).subscribe({\n            next: observer.next.bind(observer),\n            error: observer.error.bind(observer),\n            complete: observer.complete.bind(observer)\n          });\n        })\n        .catch(observer.error.bind(observer));\n\n      return () => {\n        handle && handle.unsubscribe();\n      };\n    })\n);\n\nconst refreshTokenLink = new TokenRefreshLink({\n  accessTokenField: 'accessToken',\n  isTokenValidOrUndefined: () => {\n    const { accessToken } = store.getState().me;\n\n    if (!accessToken) return true;\n\n    try {\n      const { exp } = jwtDecode(accessToken);\n      return !(Date.now() >= exp * 1000);\n    } catch {\n      return false;\n    }\n  },\n  fetchAccessToken: () => {\n    return fetch(`${URL}/refresh-token`, {\n      method: 'POST',\n      credentials: 'include'\n    });\n  },\n  handleFetch: async accessToken => {\n    const me = await meQuery(accessToken);\n    me.accessToken = accessToken;\n    store.dispatch(meActions.updateMe(me));\n  },\n  handleError: err => {\n    console.warn('Your refresh token is invalid. Try to relogin');\n    console.error('refesh token err: ', err);\n  }\n});\n\nconst defaultOptions = {\n  // watchQuery: {\n  //   fetchPolicy: 'no-cache',\n  //   errorPolicy: 'all'\n  // },\n  // query: {\n  //   fetchPolicy: 'no-cache',\n  //   errorPolicy: 'all'\n  // }\n};\n\nconst link = ApolloLink.from([refreshTokenLink, authLink, httpLink]);\nconst cache = new InMemoryCache();\n\nexport default new ApolloClient({ link, cache, defaultOptions });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport App from './App';\nimport graphqlCLient from 'src/utils/graphqlClient';\nimport store from 'src/redux/store';\nimport theme from './theme';\n\nReactDOM.render(\n  <ApolloProvider client={graphqlCLient}>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}